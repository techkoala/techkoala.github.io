<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Security - 标签 - TechKoala</title>
        <link>https://www.techkoala.top/tags/security/</link>
        <description>Security - 标签 - TechKoala</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 07 Jun 2020 23:22:43 &#43;0800</lastBuildDate><atom:link href="https://www.techkoala.top/tags/security/" rel="self" type="application/rss+xml" /><item>
    <title>Linux安全分析与加固</title>
    <link>https://www.techkoala.top/linux_security/</link>
    <pubDate>Sun, 07 Jun 2020 23:22:43 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/linux_security/</guid>
    <description><![CDATA[<pre><code>记录一些常见的Linux服务器安全问题分析以及防护措施
</code></pre>
<h2 id="日志分析">日志分析</h2>
<h3 id="常用日志文件">常用日志文件</h3>
<p><strong>Debian</strong>以及<strong>RHEL</strong>系的系统日志是由一个名为syslog的服务管理的，如以下日志文件都是由syslog日志服务驱动的：</p>
<p><code>/var/log/boot.log</code>：记录了系统在引导过程中发生的事件，就是Linux系统开机自检过程显示的信息</p>
<p><code>/var/log/lastlog</code> ：记录最后一次用户成功登陆的时间、登陆IP等信息</p>
<p><code>/var/log/messages</code> ：记录Linux操作系统常见的系统和服务错误信息</p>
<p><code>/var/log/secure</code> ：Linux系统安全日志，记录用户和工作组变坏情况、用户登陆认证情况</p>
<p><code>/var/log/syslog</code>：只记录警告信息，常常是系统出问题的信息，使用lastlog查看</p>
<p><code>/var/log/wtmp</code>：该日志文件永久记录每个用户登录、注销及系统的启动、停机的事件，使用last命令查看</p>
<p><code>/var/run/utmp</code>：该日志文件记录有关当前登录的每个用户的信息。如 who、w、users、finger等就需要访问这个文件</p>
<p><strong><code>/var/log/btmp</code>：记录Linux登陆失败的用户、时间以及远程IP地址</strong></p>
<p><strong><code>/var/log/auth.log</code>或<code>/var/log/secure</code>存储来自可插拔认证模块(PAM)的日志，包括成功的登录，失败的登录尝试和认证方式。</strong></p>
<pre><code>注：**Debian**系在/var/log/auth.log 中存储认证信息而**RHEL**系则在/var/log/secure 中存储。
</code></pre>
<p><strong>Archlinux</strong>使用<code>systemd</code>提供的日志系统（logging system），称为<code>journal</code>。使用 systemd 日志，无需额外安装日志服务（syslog）。</p>
<h3 id="相关日志查看命令">相关日志查看命令</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ cat /var/log/secure <span class="p">|</span> awk <span class="s1">&#39;/Failed/{print $(NF-3)}&#39;</span> <span class="p">|</span> sort <span class="p">|</span> uniq -c <span class="p">|</span> awk <span class="s1">&#39;{print $2&#34; = &#34;$1;}&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>查看尝试暴力登录root的IP及次数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ grep <span class="s2">&#34;Failed password for root&#34;</span> /var/log/auth.log <span class="p">|</span> awk <span class="s1">&#39;{print $11}&#39;</span> <span class="p">|</span> sort <span class="p">|</span> uniq -c <span class="p">|</span> sort -nr <span class="p">|</span> more
</code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="常见防护措施">常见防护措施</h2>
<h3 id="ssh">SSH</h3>
<h4 id="编辑ssh配置文件">编辑SSH配置文件</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ vim /etc/ssh/sshd_config
</code></pre></td></tr></table>
</div>
</div><p><strong>1、修改端口</strong></p>
<p><code>#Port 22 —&gt; Port xxxx</code></p>
<p><strong>2、关闭root登录</strong></p>
<p><code>PermitRootLogin yes -&gt; PermitRootLogin no</code></p>
<p><strong>3、使用证书登录</strong></p>
<ul>
<li>
<p><strong>若不存在证书首先执行下面步骤：</strong></p>
<p>在客户端生成密钥:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ ssh-keygen -t rsa
</code></pre></td></tr></table>
</div>
</div><p>把公钥拷贝至服务器:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ ssh-copy-id -i .ssh/id_rsa.pub server
</code></pre></td></tr></table>
</div>
</div><p>或手动将id_rsa.pub拷贝至服务器用户目录的.ssh中，并修改访问权限：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ scp .shh/id_rsa.pub server:~/.ssh
</code></pre></td></tr></table>
</div>
</div><p>服务器中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ chmod <span class="m">400</span> authorized_keys
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<p>打开证书登录：</p>
<p><code>RSAAuthentication yes</code></p>
<p>开启公钥验证：</p>
<p><code>PubkeyAuthentication yes</code></p>
<p>验证文件路径：</p>
<p><code>AuthorizedKeysFile    .ssh/authorized_keys</code></p>
<p>禁止密码认证：</p>
<p><code>PasswordAuthentication no</code></p>
<p>禁止空密码：</p>
<p><code>PermitEmptyPasswords no</code></p>
<p><strong>最后，重启SSHD服务</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ systemctl restart sshd
</code></pre></td></tr></table>
</div>
</div><h3 id="用户以及用户组管理">用户以及用户组管理</h3>
<h4 id="无用用户用户组">无用用户、用户组</h4>
<p><strong>Linux系统中可以删除的默认用户和组大致有如下这些：</strong></p>
<p>可删除的用户，如<code>adm,lp,sync,shutdown,halt,news,uucp,operator,games,gopher</code>等。</p>
<p>可删除的组，如<code>adm,lp,news,uucp,games,dip,pppusers,popusers,slipusers</code>等。</p>
<h4 id="空口令账户">空口令账户</h4>
<p>使用如下命令检测空口令账户：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ awk -F: <span class="s1">&#39;$2==&#34;!!&#34; {print $1}&#39;</span> /etc/shadow
</code></pre></td></tr></table>
</div>
</div><p>然后查看<code>/etc/passwd</code>确认空口令用户是否可以登录，选择是否加固密码。</p>
<h4 id="登录失败后强制延时">登录失败后强制延时</h4>
<p>在<code>/etc/pam.d/system-login</code>中添加<code>auth optional pam_faildelay.so delay=4000000</code>，表示延时4秒（单位微秒）</p>
<h4 id="限制root权限">限制root权限</h4>
<p>可以为单个用户启用单个程序的 root 权限，而不用为了运行一个程序启用该用户对 root 的完整访问权。例如，要授予用户 alice 对特定程序的访问权限：</p>
<p>编辑<code>/etc/sudoers</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">$ visudo
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>若要指定visudo的默认编辑器，最好是修改<code>/etc/sudoers</code>中的<code>Defaults editor=xxxx</code></p>
<p>而不是使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-shell" data-lang="shell">$ <span class="nv">EDITOR</span><span class="o">=</span>nano visudo
</code></pre></td></tr></table>
</div>
</div><p>因为任何程序都可以通过该命令指定作为编辑器，存在风险。</p>
</li>
</ul>
<p>添加：</p>
<p><code>alice ALL = NOPASSWD: /path/to/program</code></p>
<h3 id="关闭不必要的服务">关闭不必要的服务</h3>
<p><strong>例如：</strong> 某台Linux服务器用于www应用，那么除了httpd服务和系统运行是必须的服务外，其他服务都可以关闭。下面这些服务一般情况下是不需要的，可以选择关闭：</p>
<p><code>anacron、auditd、autofs、avahi-daemon、avahi-dnsconfd、bluetooth、cpuspeed、firstboot、gpm、haldaemon、hidd、ip6tables、ipsec、isdn、lpd、mcstrans、messagebus、netfs、nfs、nfslock、nscd、pcscd portmap、readahead_early、restorecond、rpcgssd、rpcidmapd、rstatd、sendmail、setroubleshoot、yppasswdd ypserv</code></p>
<h3 id="文件系统安全">文件系统安全</h3>
<p><strong>文件权限检查和修改</strong></p>
<p><strong>（1）查找系统中任何用户都有写权限的文件或目录</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">查找文件：$ find / -type f -perm -2 -o -perm -20 <span class="p">|</span>xargs ls -al
查找目录：$ find / -type d -perm -2 -o -perm -20 <span class="p">|</span>xargs ls –ld
</code></pre></td></tr></table>
</div>
</div><p><strong>（2）查找系统中所有含“s”位的程序</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">find / -type f -perm -4000 -o -perm -2000 -print <span class="p">|</span> xargs ls –al
</code></pre></td></tr></table>
</div>
</div><p>含有“s”位权限的程序对系统安全威胁很大，通过查找系统中所有具有“s”位权限的程序，可以把某些不必要的“s”位程序去掉，这样可以防止用户滥用权限或提升权限的可能性。</p>
<p><strong>（3）检查系统中所有suid及sgid文件</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ find / -user root -perm -2000 -print -exec md5sum <span class="o">{}</span> <span class="p">;</span>
$ find / -user root -perm -4000 -print -exec md5sum <span class="o">{}</span> <span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>将检查的结果保存到文件中，可在以后的系统检查中作为参考。</p>
<p><strong>（4）检查系统中没有属主的文件</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ find / -nouser -o –nogroup
</code></pre></td></tr></table>
</div>
</div><p>没有属主的孤儿文件比较危险，因此找到这些文件后，要么删除掉，要么修改文件的属主，使其处于安全状态。</p>
<h2 id="检测工具">检测工具</h2>
<h2 id="参考">参考</h2>
<ul>
<li>
<p>[1] Linux服务器为什么被黑？</p>
</li>
<li>
<p>[2] <a href="https://www.cnblogs.com/doublexi/p/9636506.html" target="_blank" rel="noopener noreffer">linux系统安全加固&ndash;账号相关</a></p>
</li>
<li>
<p>[3] <a href="https://wiki.archlinux.org/index.php/Security" target="_blank" rel="noopener noreffer">Security - Archlinux Wiki</a></p>
</li>
</ul>
]]></description>
</item></channel>
</rss>
