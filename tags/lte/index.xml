<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LTE - 标签 - TechKoala</title>
        <link>https://www.techkoala.top/tags/lte/</link>
        <description>LTE - 标签 - TechKoala</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>admin@techkoala.top (TechKoala)</managingEditor>
            <webMaster>admin@techkoala.top (TechKoala)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 31 Aug 2020 21:00:39 &#43;0800</lastBuildDate><atom:link href="https://www.techkoala.top/tags/lte/" rel="self" type="application/rss+xml" /><item>
    <title>LTE 系列：RRC 层详解</title>
    <link>https://www.techkoala.top/lte_rrc/</link>
    <pubDate>Mon, 31 Aug 2020 21:00:39 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_rrc/</guid>
    <description><![CDATA[<blockquote>
<p>LTE RRC 层详解</p>
</blockquote>
<h2 id="无线资源控制rrc">无线资源控制（RRC）</h2>
<p>无线资源控制（Radio Resource Control，RRC）层是 LTE 无线接入网协议中控制面部分的主要内容。RRC 协议消息采用抽象语法描述（Abstract Syntax Notation，ASN.1）的方式进行描述。ASN.1 是国际电联（ITU-T）建议的一种标记语言，用于描述计算机之间交互的结构化信息，它定义了传送数据的表示方式，即传送语法。用户终端在进行数据通信之前，需要与网络建立承载信令消息的连接，通过信令消息的交互，控制数据通信的过程。因此，“是否与网络建立了 RRC 连接”是终端状态的判断依据。已经与网络建立了 RRC 连接的终端处于连接状态，即 RRC 连接状态。如果没有与网络建立 RRC 连接，那么终端处于空闲状态，即 RRC 空闲状态。“RRC 连接状态”和“RRC 空闲状态”是 LTE 无线接入网中终端可能的两种状态，在 RRC 连接状态下，终端可以进行数据的传输、系统信息的接收，以及邻小区的测量上报和小区切换。RRC 空闲状态下，终端不进行数据的传输，仍然需要执行的功能包括：系统信息的接收、侦听寻呼，以及邻小区测量和小区重选。</p>
<p>RRC 协议包括以下的主要功能：</p>
<ul>
<li>系统信息的广播，包括接入网的系统广播消息，以及核心网非接入层（NAS）系统信息的广播</li>
<li>连接控制，包括信令承载（即 RRC 连接）的建立／重配置／重建立／释放、数据无线承载的建立／配置／释放，以及相关的完整性保护的数据加密的安全机制</li>
<li>移动性管理，包括配置终端的测量和上报，以及终端的小区选择、重选、寻呼和切换过程</li>
<li>服务质量（QoS）管理</li>
<li>NAS 信令直接传输的功能</li>
</ul>
<h3 id="系统信息的广播">系统信息的广播</h3>
<p>系统信息描述网络的基本情况，采用广播的方式进行发送，对应于广播控制逻辑信道（BCCH）。终端通过对系统信息的接收，获得为了在系统中进行通信所需要的网络基本参数。</p>
<p>LTE 的系统信息分为：</p>
<ul>
<li>
<p>主信息块（Master Information Block，MIB）</p>
<p>主信息块（MIB）包括小区最基本的物理层信息，例如：系统下行信号的带宽、无线帧序号和发送天线的数目。终端需要获得这些基本的信息才能够进一步接收系统的其他信息。MIB 信息在专门定义的广播传输信道（BCH）上，采用物理层广播信道（PBCH）在固定的时间和频率位置进行传输。MIB 采用 40ms 的周期重复发送，每个周期之内包括 4 次间隔为 10ms 的传输，在序号 SFN%4=0 无线帧的第 0 个子帧开始每个周期的第一次传输，其余 3 次传输发生在随后 3 个无线帧的第 0 个子帧的位置。</p>
</li>
<li>
<p>系统信息块（System Information Block，SIB）</p>
<p>系统信息块（SIB）映射在下行共享传输信道（DL-SCH）上进行传输，采用 SI-RNTI 进行指示。根据所传输信息的不同，SIB 分为多种类型：Type 1 ～ Type 12。Type 1 信息（SIB1）包括了是否允许终端接入小区的相关信息，例如系统的公众网络标识（PLMN）、小区标识、关闭的用户组（CSG）信息以及 TDD 系统上下行时隙比例的配置信息。SIB1 中还承载了其他系统信息块（SIB2 ～ SIB13）的调度信息。SIB2 承载用于所有终端公共的无线资源配置信息，例如系统上行信号的频率／带宽、MBSFN 子帧、随机接入信道、寻呼信道、上行 sounding 导频和上行功率控制等的配置情况。SIB3 ～ SIB8 承载用于终端进行小区重选的相关参数，分别针对于同频、异频和异系统 3G/GSM/cdma2000 各种不同的情况。SIB9 指示关于家庭基站名字的信息。SIB10 ～ SIB12：用于公共灾害的警示服务，即地震和海啸警报系统（Earthquake and Tsunami Warning System，ETWS）和商用移动警报服务（Commercial MobileAlert Service，CMAS）。</p>
</li>
</ul>
<p>SIB1 信息使用固定的时间位置进行传输，采用 80ms 的周期重复发送，每个周期之内包括 4 次间隔为 20ms 的传输，在序号 SFN%8=0 无线帧的第 5 个子帧开始每个周期的第一次传输，其余 3 次传输发生在随后 3 个序号为偶数的无线帧的第 5 个子帧的位置。除了 SIB1 之外，其余的 SIB 消息映射在系统信息（System Information，SI）上进行传输，它们的映射关系可以进行灵活的配置，由 SIB1 中承载的调度信息进行指示。一个 SIB 消息只能映射在一个 SI 上进行传输，而一个 SI 可以包含多个具有相同周期的 SIB 消息。</p>
<p>系统广播信息向传输信道的映射如图所示</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_22.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_22.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_22.webp" data-sub-html="<h2>系统广播信息向传输信道的映射</h2>">
        
    </a><figcaption class="image-caption">系统广播信息向传输信道的映射</figcaption>
    </figure>
<p>系统广播信息的更新采用“更新提示”和“信息更新”两个阶段的方式。根据系统配置的更新周期（最小值为 640ms），当需要对系统广播消息进行更新的时候，系统在前一个更新周期使用寻呼消息提示用户，系统广播消息将发生改变，但是在这个更新周期中，仍然发送原来的系统信息。在下一个更新周期，将发送改变之后的系统信息，终端根据该信息进行更新。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_23.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_23.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_23.webp" data-sub-html="<h2>系统广播信息的更新</h2>">
        
    </a><figcaption class="image-caption">系统广播信息的更新</figcaption>
    </figure>
<h3 id="对连接的控制">对连接的控制</h3>
<p>连接控制指的是对接入网中的无线承载进行控制的功能，包括信令承载的建立／重配置／重建立／释放、数据承载的建立／配置／释放，以及相关的完整性保护和数据加密的通信安全机制。</p>
<h4 id="rrc-连接的管理">RRC 连接的管理</h4>
<p>LTE 中一共定义了 3 个用于信令的无线承载（Signaling Radio Bearer，SRB）：</p>
<ul>
<li>
<p>SRB0 用于承载公用控制逻辑信道（CCCH）的 RRC 消息</p>
</li>
<li>
<p>SRB1 主要用于承载专用控制逻辑信道（DCCH）的 RRC 消息</p>
<p>通常所说的建立 RRC 连接指的是信令无线承载 SRB1 的建立。</p>
</li>
<li>
<p>SRB2 用于承载专用控制逻辑信道（DCCH）的核心网非接入层（NAS）控制信息。</p>
</li>
</ul>
<p>终端开机在网络中进行注册之后处于空闲状态，在一个通常的通信过程中，空闲状态的终端首先需要与网络建立 RRC 连接，进入 RRC 连接状态，才能进行数据的通信。在这个过程中，建立传输 RRC 消息的信令承载 SRB1，终端进入 RRC 连接状态。然后，系统建立传输 NAS 消息的信令无线承载 SRB2 和传输数据的无线承载 DRB，由此可以开始进行数据的通信。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_24.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_24.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_24.webp" data-sub-html="<h2>RRC 连接建立的过程</h2>">
        
    </a><figcaption class="image-caption">RRC 连接建立的过程</figcaption>
    </figure>
<p>进入 RRC 连接状态之后，采用 RRC 连接重配置的过程来进行 SRB2 和 DRB 的建立和管理。重配置过程在连接状态下对 RRC 连接进行更改，包括建立／更改／释放无线承载，进行小区切换的过程，以及建立／更改／释放终端的测量和上报。对应于这些功能，RRC 连接重配置消息中可能携带的信息包括无线资源的配置情况（无线承载、MAC 层和物理层），移动性控制的相关参数，以及无线测量的配置信息。其中，无线资源的配置信息包括公共的配置信息和专用的配置信息。公共的配置信息描述了移动性控制信息和系统信息中公共的无线资源配置情况，例如随机接入信道的参数、系统上行 sounding 导频配置和上行功率控制参数等静态的物理层配置信息。专用的配置信息用于无线承载的管理，例如 MAC 层配置、SPS 调度以及专用的物理层配置等。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_25.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_25.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_25.webp" data-sub-html="<h2>RRC 连接重配置的过程</h2>">
        
    </a><figcaption class="image-caption">RRC 连接重配置的过程</figcaption>
    </figure>
<p>按照 RRC 连接重配置消息中携带的配置信息，无线承载建立的过程包括建立一个 PDCP 实体、建立一个 RLC 实体，以及按照指定的逻辑信道标识建立一个逻辑信道。与建立的过程相对应，当 RRC 连接重配置消息指示释放某个无线承载的时候，将释放相应的 PDCP 实体、RLC 实体和逻辑信道。</p>
<p>通过 RRC 连接释放的过程，终端由 RRC 连接状态转变为空闲状态。这个过程释放 RRC 连接，包括所有已经建立的信令和数据的无线承载，以及所有的无线资源。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_26.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_26.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_26.webp" data-sub-html="<h2>RRC连接释放的过程</h2>">
        
    </a><figcaption class="image-caption">RRC连接释放的过程</figcaption>
    </figure>
<h4 id="通信安全的功能">通信安全的功能</h4>
<p>为了保证通信的安全，防止窃听、伪装等恶意行为，无线接入网的连接控制中包含安全通信的相关功能，包括信令消息的完整性保护，以及信令和数据消息的加密。</p>
<p>在 RRC 连接建立的过程中，无线接入网从核心网取得终端用户的相关信息，然后可以使用安全模式激活（如图 2-28 所示）的 RRC 消息设置用户密钥和加密算法，开启信令完整性保护和加密的功能，从而保证后续通信过程的安全（包括 SRB2 和 DRB 的建立等）。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_27.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_27.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_27.webp" data-sub-html="<h2>安全模式激活的过程</h2>">
        
    </a><figcaption class="image-caption">安全模式激活的过程</figcaption>
    </figure>
<p>在通信的过程中还可以通过计数器检查（counter check）的 RRC 消息防止采用“中间人（man in the middle）”方式的恶意攻击。在计数器检查的过程中，网络发送计数器检查消息要求终端确认在每个数据无线承载 DRB 上发送和接收数据的数量，通过这样的方法可以排除“中间人”可能进行的伪装通信。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_28.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_28.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_28.webp" data-sub-html="<h2>计数器检查的过程</h2>">
        
    </a><figcaption class="image-caption">计数器检查的过程</figcaption>
    </figure>
<h3 id="终端移动性的管理">终端移动性的管理</h3>
<p>终端移动性的管理是 LTE 作为移动通信系统一个重要的控制功能，实现相关功能的协议包括终端与无线接入网之间的 RRC 控制协议，以及终端与核心网之间非接入层（NAS）控制协议。</p>
<h4 id="空闲状态终端的移动性管理">空闲状态终端的移动性管理</h4>
<p>处于 RRC 空闲状态的终端与无线接入网没有建立 RRC 连接，终端的信息在核心网中注册并且分配有 IP 地址，无线接入网中不存储空闲状态终端的信息。终端进行自身的移动性管理，发起小区选择／重选，当跟踪区位置发生改变的时候向核心网进行登记。核心网记录终端所处的跟踪区位置（TrackingArea，TA，通常由相邻覆盖的若干个小区组成），核心网可以发起对终端的寻呼，终端根据核心网配置的 DRX 周期监听可能的寻呼消息。空闲状态的终端不能进行单播数据的传输。</p>
<p>在终端开机的过程中，首先根据 PLMN（公众网络标识）进行网络的选择，选定例如某个运营商的网络，之后终端进行小区选择，确定所驻留的小区，侦听该小区的控制信道。然后采用跟踪区改变的流程向核心网注册终端所处的跟踪区位置。终端在移动的过程中，可能由一个小区无线信号的覆盖范围进入另一个小区的覆盖范围，这时候终端将进行小区重选的操作，改变所驻留侦听控制信道的小区。如果这个小区与前一个小区属于不同的跟踪区，那么在小区重选之后，终端将发起跟踪区改变的流程，使用非接入层（NAS）信令向核心网注册新的跟踪区位置。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_29.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_29.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_29.webp" data-sub-html="<h2>空闲状态终端的寻呼和跟踪区改变</h2>">
        
    </a><figcaption class="image-caption">空闲状态终端的寻呼和跟踪区改变</figcaption>
    </figure>
<p>当有呼叫到达或者是系统消息改变需要向空闲状态的终端发送寻呼消息的时候，核心网移动控制实体（MME）根据终端所注册的跟踪区位置，找到相对应的跟踪区列表，然后在列表中所有的跟踪区（内的所有小区）上，发送针对该终端的寻呼消息。</p>
<h4 id="连接状态终端的移动性管理">连接状态终端的移动性管理</h4>
<p>处于 RRC 连接状态的终端与无线接入网建立了 RRC 连接，终端的信息在核心网和无线接入网中都进行存储和管理。网络登记终端所处的小区位置，终端的移动性由网络采用切换的流程进行管理。RRC 连接状态的终端可以进行单播数据的传输。为了节省耗电，终端可以采用由无线接入网配置的 DRX 功能。</p>
<p>RRC 连接状态终端的移动性由网络进行控制，网络根据无线接口的情况决定是否改变终端的服务小区，即切换的过程是由网络触发的。为了获取关于无线接口情况的信息，网络可以配置终端进行相关的测量和上报，然后根据上报的结果，触发切换的流程，关于测量和上报的内容，将在下一节中进行介绍。另外，没有收到终端的测量与上报，网络也可以自行触发进行切换。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_30.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_30.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_30.webp" data-sub-html="<h2>连接状态终端的小区间切换</h2>">
        
    </a><figcaption class="image-caption">连接状态终端的小区间切换</figcaption>
    </figure>
<p>为了进行切换过程的控制，首先由源服务小区配置终端进行相关的测量和上报，根据上报的信息，源服务小区判断终端是否需要进行切换并且选择目标小区，然后触发切换的信令流程。通过 eNodeB 之间互联的 X2 接口，源小区向目标小区发送切换请求的消息，该消息中包含了对于目标小区无线资源需求情况的信息。根据这样的信息，如果目标小区确定可以接受终端进行切换，那么目标小区根据要求进行无线资源的准备，并向源小区反馈切换请求确认的消息，该消息包含终端接入目标小区时需要的信息，例如新的 C-RNTI 标识、目标小区的系统信息，以及分配的专用随机接入序列等。源服务小区在收到目标小区对于切换请求的确认消息后，采用带有移动性控制信息的 RRC 连接重配置消息将这些来自目标小区的接入配置信息转发给终端，并且命令终端向目标小区进行切换。此时，因为来自核心网数据的传输路由还没有发生改变，源基站还可能负责将数据转发给目标基站。收到 RRC 连接重配置消息的切换命令后，终端根据指示的信息，向目标小区发起接入，采用随机接入的过程获得与目标小区的上行同步以及上行资源的分配。然后，在所分配的上行无线资源上，终端向目标小区发送 RRC 连接重配置完成消息，确认终端已经完成了切换，目标基站已经成为终端的服务基站，可以开始向终端发送数据。无线接入网的切换完成后，目标基站将向核心网的移动控制实体（MME）发送路径切换请求，并由 MME 协调数据网管（SGW）完成用户数据传输路径的改变，核心网将数据路径转移到目标小区。完成数据路径的转换后，目标小区向源小区发送终端上下文释放的消息，以此来确认成功地完成了整个切换的过程，源小区释放对应于该终端用户的相关资源。</p>
<h4 id="配置终端的测量和上报">配置终端的测量和上报</h4>
<p>为了进行移动性管理的操作，终端需要根据网络的配置对无线信道的情况进行测量，包括同频、异频或者异系统的测量场景。网络可以通过广播或者专用的控制信息配置终端的测量，对于空闲状态的终端，通过网络广播消息中配置的测量参数，终端完成小区选择／重选等移动性功能。对于 RRC 连接状态的终端，通过 RRC 信令（即 RRC 连接重配置消息）可以对终端进行专门的测量配置，终端向网络上报测量结果，协助网络进行小区切换的移动性管理。</p>
<p>在进行测量时，如果终端的源服务小区与目标小区工作在相同的载波频率，那么称为同频测量，例如采用频率复用系数等于 1 的同频组网的情况。进行同频测量，不需要测量间隔，也就是说，在对同频目标小区进行测量的时候，终端不需要中断对源服务小区的信号接收。源服务小区和目标小区工作在不同载波频率的场景属于异频测量，为了对异频的目标小区进行测量，通常情况下需要配置测量间隔，终端中断对源小区的信号接收，将接收频率调整到目标小区进行测量。</p>
<p>对终端的测量进行配置的消息内容主要包括“测量的对象”和“测量上报的配置”。其中，每一个测量的对象对应于 LTE 系统内同频或者异频的一个载波频率，或者某一个载波频率上异系统 WCDMA 的一个小区列表。而每一个测量上报的配置包括测量上报的格式，例如上报多少个目标小区的测量结果，以及上报的触发条件，包括周期性上报和事件触发两种可能性。为了支持终端在同频、异频和异系统各种不同场景情况下的移动性，在 LTE Release 8 中一共定义了 7 种可以触发终端进行测量上报的事件，可以根据需要进行配置。适用于 LTE 系统内同频或者异频的场景一共定义有 5 种事件，包括：A1 事件，服务小区的信号质量优于某个设定的门限；A2 事件，服务小区的信号质量差于某个设定的门限；A3 事件，相邻小区的信号质量优于服务小区超过某个设定的门限；A4 事件，相邻小区的信号质量优于某个设定的门限；A5，服务小区的信号质量差于某个设定的门限的同时，相邻小区的信号质量优于某个设定的门限。另外，针对与异系统之间的移动性操作，定义了两种事件：B1 事件，异系统相邻小区的信号质量优于某个设定的门限；B2 事件，服务小区的信号质量差于某个设定的门限的同时，异系统相邻小区的信号质量优于某个设定的门限。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_31.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_31.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_31.webp" data-sub-html="<h2>终端测量上报的过程</h2>">
        
    </a><figcaption class="image-caption">终端测量上报的过程</figcaption>
    </figure>
<h3 id="服务质量qos管理">服务质量（QoS）管理</h3>
<p>LTE 系统中采用 EPS 承载为单位进行端到端的服务质量（QoS）管理。EPS（Evolved Packet System）承载是终端和分组数据网网关（P-GW）之间的连接，1 个 EPS 承载包括：1 个无线承载，即终端和 eNodeB 基站之间的连接；1 个 S1 承载，即 eNodeB 和服务网关（S-GW）</p>
<p>之间的连接；以及 1 个 S5/S8 承载，即 S-GW 和 P-GW 之间的连接，如图 2-33 所示。对于一个终端，网络可以建立多个 EPS 承载，每个 EPS 承载可以有不同的 QoS 参数，因此除了在不同用户之间实现不同的 QoS，属于同一个用户的多个 EPS 承载也可以实现不同的 QoS，用于一个用户在同时进行的不同业务。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_32.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_32.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_32.webp" data-sub-html="<h2>LTE 系统中的承载</h2>">
        
    </a><figcaption class="image-caption">LTE 系统中的承载</figcaption>
    </figure>
<p>针对每一个 EPS 承载，由核心网分配 QoS 参数，包括“QoS 类别标识（QoS Class Identifier，QCI）”和“分配和滞留优先级（Allocation and Retention Priority，ARP）”。其中，QCI 参数描述了承载的 QoS 类别，每一种 QoS 类别都对应于一系列影响数据服务质量的具体系统参数，例如调度的加权、准入门限和排队门限，等等。ARP 参数描述了承载的优先级，包括在资源受限的情况下是否允许建立承载，或者是否丢弃某个优先级较低的承载。另外还有“保证数据速率（Guaranteed Bit Rate，GBR）”和“最大数据速率（Maximum Bit Rate，MBR）”，这两个参数用于具有保证速率属性的承载。而对于不具有保证速率属性的承载，使用参数“最大总速率（Aggregated Maximum Bit Rate，AMBR）”来限制一个终端的所有不具有保证速率属性的承载的最大总速率。</p>
<p>根据核心网确定的 QoS 参数，无线接入网负责执行无线承载部分的 QoS 管理，例如无线资源的调度策略和排队管理策略等。RRC 协议可以执行一部分 QoS 管理的功能，主要包括半持续资源调度的配置，以及通过配置终端上行逻辑信道的优先级，实现对一个终端内多个上行承载的速率控制。</p>
<h3 id="核心网信令的直接传输">核心网信令的直接传输</h3>
<p>除了 RRC 协议信息之外，RRC 消息还可以用于承载核心网的非接入层（NAS）信息。采用所定义的上行／下行 NAS 信息直接传输的 RRC 过程，可以通过“隧道打包”的方式，在终端用户和网络核心网之间传输 NAS 信息。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_32.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_32.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_32.webp" data-sub-html="<h2>上行（NAS）信息的直接传输</h2>">
        
    </a><figcaption class="image-caption">上行（NAS）信息的直接传输</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_33.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_33.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_33.webp" data-sub-html="<h2>下行（NAS）信息的直接传输</h2>">
        
    </a><figcaption class="image-caption">下行（NAS）信息的直接传输</figcaption>
    </figure>]]></description>
</item><item>
    <title>LTE 系列：MAC 层详解</title>
    <link>https://www.techkoala.top/lte_mac/</link>
    <pubDate>Mon, 31 Aug 2020 21:00:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_mac/</guid>
    <description><![CDATA[<blockquote>
<p>LTE MAC 层详解</p>
</blockquote>
<h2 id="媒体接入控制mac">媒体接入控制（MAC）</h2>
<p>媒体接入控制（Medium Access Control，MAC）层接收来自上层的 RLC 层的逻辑信道，经过处理后，以传输信道的方式输出到下层的物理层。</p>
<p>MAC 层的主要功能包括：</p>
<ul>
<li>逻辑信道向传输信道的映射与复用</li>
<li>根据不同优先级进行动态的资源调度</li>
<li>选择传输格式实现动态的速率自适应</li>
<li>混合自动重传（HybridAutomatic Repeat reQuest，HARQ）的纠错功能。</li>
</ul>
<h3 id="逻辑信道">逻辑信道</h3>
<p>逻辑信道根据所传输的信息的类型进行定义。LTE 定义的逻辑信道包括：</p>
<ul>
<li>用于传输系统广播消息的<strong>广播控制信道</strong>（Broadcast Control CHannel，BCCH）</li>
<li>用于传输寻呼消息的<strong>寻呼控制信道</strong>（Paging Control CHannel，PCCH）</li>
<li>分别用于空闲状态和连接状态的终端传输控制信息的<strong>公用和专用控制信道</strong>（Common/ Dedicated Control CHannel，CCCH/DCCH）</li>
<li>用于传输用户数据信息的<strong>专用业务信道</strong>（Dedicated Traffic CHannel，DTCH）</li>
</ul>
<h3 id="传输信道">传输信道</h3>
<p>传输信道根据信息传输的方式进行定义。传输信道以传输块为单位在发送时间间隔（Transmission Time Interval，TTI）所定义的时间长度内进行每一次的发送，LTE 中设计的 TTI 长度是 1ms。每个传输块都有定义的传输格式，它由网络的调度功能动态地确定，包括传输块大小、调制方式和多天线方案等。</p>
<p>LTE 定义的传输信道包括：</p>
<ul>
<li><strong>广播信道</strong>（Paging CHannel，PCH），采用固定的传输格式，用于传输广播控制信道；</li>
<li><strong>上行共享信道／下行共享信道</strong>（Downlink/Uplink Shared CHannel，DL-SCH/UL-SCH），支持基于无线信道状态的实时调度、动态的速率自适应、HARQ 软合并和多天线空间复用的传输方式，是 LTE 进行上行和下行数据传输的主要的传输信道。</li>
</ul>
<p>在 LTE 空中接口 MAC 层协议功能的处理过程中，逻辑信道向传输信道以及最终的物理信道的映射关系如下所示：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_9.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_9.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_9.webp" data-sub-html="<h2>下行信道映射</h2>">
        
    </a><figcaption class="image-caption">下行信道映射</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_10.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_10.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_10.webp" data-sub-html="<h2>上行信道映射</h2>">
        
    </a><figcaption class="image-caption">上行信道映射</figcaption>
    </figure>
<h3 id="mac-协议数据单元格式">MAC 协议数据单元格式</h3>
<p>MAC 包头可以包含多个子包头，每个子包头对应于 MAC PDU 负荷部分的 1 个 MAC 控制单元、MAC SDU 或者填充比特字段。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_11.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_11.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_11.webp" data-sub-html="<h2>MAC 协议数据单元 PDU 的格式</h2>">
        
    </a><figcaption class="image-caption">MAC 协议数据单元 PDU 的格式</figcaption>
    </figure>
<p>子包头的格式如图所示：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_12.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_12.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_12.webp" data-sub-html="<h2>MAC 层的子包头</h2>">
        
    </a><figcaption class="image-caption">MAC 层的子包头</figcaption>
    </figure>
<ul>
<li>LCID 字段指示所对应的 MAC 负荷的类型，对于长度固定的 MAC 控制单元或者是 MAC 负荷的最后一个部分，不需要指示 MAC 子包头所对应的 MAC 负荷的长度。在其他情况下，子包头需要 F 和 L 字段，来指示所对应的负荷的长度。因此存在带有负荷长度指示和不带有负荷长度指示，即是否带有 F 和 L 字段的两种类型的 MAC 子包头</li>
<li>R（Reserve）字段为保留字段，数值设为 0</li>
<li>E（Extension）字段指示本子包头后面是否还有其他的子包头，或者是包头部分已经结束，将要开始 MAC 控制单元或者 MAC SDU 的传输</li>
<li>LCID（Logical Channel ID）字段指示 MAC SDU 所属逻辑信道的标识、MAC 控制单元的类型或者是填充比特</li>
<li>F（Format）字段指示随后的 L 字段的长度，7 个比特或者 15 个比特</li>
<li>L（Length）字段指示与子包头相对应的 MAC SDU 或者 MAC 控制单元的字节长度</li>
</ul>
<h3 id="mac-层功能和-mac-控制单元">MAC 层功能和 MAC 控制单元</h3>
<p>下面介绍 MAC 层的主要功能，以及在完成这些功能过程中所需要的 MAC 控制单元。所介绍的 MAC 层功能包括随机接入，以及数据调度和传输的过程。</p>
<h4 id="随机接入过程">随机接入过程</h4>
<p>随机接入是由 MAC 层控制的一项功能，空闲状态的终端通过随机接入过程与网络建立连接。</p>
<p>首先建立执行控制功能的连接（即 RRC 连接），终端由空闲状态转变为连接状态$\Longrightarrow$然后通过 RRC 控制功能建立数据通信的连接，开始进行数据的通信。</p>
<p>对于连接状态的终端，也可能因为长时间没有进行上行信号的发送而失去上行同步，此时如果有上行或者下行的数据需要进行发送，终端需要进行随机接入的过程，与基站重新建立上行同步。随机接入过程可以由终端发起，也可以由网络侧通过物理层下行控制信道（PDCCH）触发终端发起随机接入。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_13.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_13.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_13.webp" data-sub-html="<h2>随机接入过程</h2>">
        
    </a><figcaption class="image-caption">随机接入过程</figcaption>
    </figure>
<p>在随机接入过程中，终端选择 1 个随机接入序列通过物理层随机接入信道（PRACH）进行发送（在网络侧触发的情况下，由触发消息指示终端所使用的随机接入序列）$\Longrightarrow$基站检测到随机接入序列的信号后，在下行方向上发送随机接入响应，该消息指示了基站所检测到的随机接入序列的编号、为发起随机接入的终端分配的上行资源位置和上行信号发送时间的调整量。</p>
<h5 id="冲突解决">冲突解决</h5>
<p>如果多个终端选择了相同的随机接入序列并且在相同的时间进行发送，那么多个终端可能针对随机接入响应的接收发生冲突，所以需要冲突解决的过程。在收到随机接入响应的消息后，终端根据消息指示的内容进行上行信号的发送（又称为“消息 3”），对应于图中的步骤 3，该信号中可能包含终端的唯一标识。随后基站根据接收到的上行信息，向唯一标识所对应的成功接入的终端返回冲突解决消息，这样完成了冲突解决的过程。</p>
<ul>
<li>
<p>小区无线网络临时标识。</p>
<p>收到基站的随机接入响应消息后，终端发送上行消息（即“消息 3”）开始冲突解决的过程。对于连接状态的终端发起随机接入过程的情况，该消息中包含终端的唯一标识：小区无线网络临时标识（Cell-Radio Network Temporary Identifier，C-RNTI）。具体来说，“消息 3”中使用 MAC 控制单元来指示 C-RNTI 的信息。</p>
<p>C-RNTI 的 MAC 控制单元仅包含一个字段，即 16 比特 C-RNTI。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_14.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_14.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_14.webp" data-sub-html="<h2>MAC 控制单元——C-RNTI</h2>">
        
    </a><figcaption class="image-caption">MAC 控制单元——C-RNTI</figcaption>
    </figure>
</li>
<li>
<p>终端冲突解决标识。</p>
<p>在上行随机接入过程中，终端发送上行消息（即“消息 3”）开始冲突解决的过程，对于连接状态的终端发起随机接入的情况，“消息 3”中指示终端的唯一标识 C-RNTI，在随后的下行发送中，网络通过物理层下行控制信道（PDCCH）指示该 C-RNTI 即可完成冲突解决。在另一种情况下，对于空闲状态的终端发起随机接入过程的情况，网络在随机接入响应消息中向终端分配“临时 RNTI”，但是因为还存在可能发生冲突的情况，所以在随后的“消息 3”中终端不使用“临时 RNTI”，而是传输上行公用控制信道（CCCH）的 RRC 连接建立请求消息。与此相对应的，基站在随后的下行发送中通过终端冲突解决标识的 MAC 控制单元完成冲突解决的过程。成功地完成冲突解决之后，终端将使用网络分配的“临时 RNTI”作为 C-RNTI。</p>
<p>终端冲突解决标识的 MAC 控制单元仅包含一个字段：终端冲突解决标识，这个字段包含上行随机接入冲突解决过程中，终端在 Message 3 消息中发送的上行公用控制信道的服务数据单元（CCCH SDU）。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_15.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_15.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_15.webp" data-sub-html="<h2>MAC 控制单元——终端冲突解决标识</h2>">
        
    </a><figcaption class="image-caption">MAC 控制单元——终端冲突解决标识</figcaption>
    </figure>
</li>
</ul>
<h4 id="数据的调度和传输">数据的调度和传输</h4>
<p>数据的调度和传输是 MAC 层控制的另一项主要功能。对于数据信息的传输，即传输信道中的上行／下行共享信道（DL/UL-SCH），可以根据无线信道状态将无线资源在用户间进行自适应的调度分配，实现系统资源的优化利用，同时满足各个用户的 QoS 要求。主要采用动态调度的方式，也可以支持半持续调度（Semi-Persistent Scheduling，SPS）的方式。在动态调度的情况下，根据无线信道状态和用户优先级等信息，基站按照长度等于 1ms 的发送时间间隔（TTI）作为单位，在每个 1ms 对各个终端所使用的无线资源进行分配，并且选择合适的数据传输格式。在半持续调度的情况下，基站一次性为终端分配较长时间的无线资源，可以节省进行资源调度的控制信息。</p>
<h5 id="半持续调度">半持续调度</h5>
<p>LTE 支持“半持续（Semi-Persistent Scheduling，SPS）”的调度方式。对于某些业务量不大而且比较规则的业务（例如 VoIP），一次性的对较长时间内的资源使用进行分配，而不需要在每次传输的时候都进行动态分配，通过这样的机制，节省了为终端进行资源调度的 PDCCH 控制信令的开销。</p>
<p>对于半持续调度，为了减小调度信令的开销，基站一次为终端分配一段时间内预先定义好的无线资源和相应的传输格式，主要参数是“半持续调度的时间间隔”。例如，根据 VoIP 业务的流量特点，设置半持续调度的时间间隔等于 20ms，为用户分配一段时间内间隔为 20ms、相同频域位置和大小的无线资源。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_16.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_16.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_16.webp" data-sub-html="<h2>半持续调度</h2>">
        
    </a><figcaption class="image-caption">半持续调度</figcaption>
    </figure>
<h5 id="harq">HARQ</h5>
<p>MAC 层采用混合自动重传（Hybrid Automatic Repeat reQuest，HARQ）的数据纠错机制。设置多个并行的“停—等”机制的 HARQ 进程（如图 2-18 所示），每个进程独立地进行数据包的重传和合并。多个并行的进程保证数据包传输的工作效率，重传保证了数据包传输的正确性，同时合并的处理还可以提供额外的性能增益。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_17.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_17.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_17.webp" data-sub-html="<h2>多个并行的“停——等”机制的 HARQ 进程</h2>">
        
    </a><figcaption class="image-caption">多个并行的“停——等”机制的 HARQ 进程</figcaption>
    </figure>
<p>在下行的数据传输中，每个 HARQ 进程内部采用异步、自适应的机制。其中，异步指的是对于 1 个数据包的多次传输（包括第一次的初传和随后可能的多次重传），各次传输之间没有固定的定时关系。也就是说，对于需要重传的数据包，在满足与这个数据包上一次传输之间的时间间隔不小于规定的最小值（8ms）的条件的基础上，调度器可以灵活地选择进行重传的时间。自适应指的是在各次传输之间，调度器可以灵活地选择不同位置／大小的物理资源，以及不同的传输格式（包括调制方式和信道编码速率等）。与异步、自适应的 HARQ 机制相匹配，下行数据包的传输伴随有下行调度信令，调度信令中指示当前所传输的下行数据包的资源位置、传输格式和所对应的 HARQ 进程号码，用户终端通过检测下行调度信令，可以进行下行数据包的接收、重传数据包的合并以及数据解调的操作。</p>
<p>对于上行数据的传输，每个 HARQ 进程内部采用同步的机制。与下行方向采用的异步机制不同，上行采用的同步机制指的是对于上行 HARQ 过程中一个数据包的多次传输（包括第一次的初传和随后可能的多次重传），各次传输之间采用固定的定时关系。例如：在时刻 0 进行初传的数据包，如果出现接收错误需要进行重新传输，那么第一次重传将发生在时刻 8，如果仍然接收错误需要继续重传，那么第二次重传将发生在时刻 16，以此类推。根据这样的同步的定时关系，对于上行 HARQ 过程的数据重新传输，基站可以不对重传的数据包进行调度。此时，终端仅收到网络侧基站反馈的关于数据接收出错的消息，终端将根据固定的定时关系，在规定的时间采用与第一次传输相同的频率资源位置和传输格式进行重传，这种方式称为同步、非自适应的 HARQ 机制。上行方向还可以支持同步、自适应的 HARQ 机制，网络侧基站反馈关于数据接收出错的消息的同时可以发送对于重传数据包的上行调度信息，该调度信息不改变重传数据包的传输时间，即仍然是同步的机制，但是可以调度不同位置和大小的频率资源，以及不同的传输格式，也就是说，实现自适应的 HARQ 机制。</p>
<h5 id="上行缓存状态报告">上行缓存状态报告</h5>
<p>终端的上行发送是根据基站的调度进行的，因此，终端的缓存中等待进行发送的数据的数量是基站进行调度时需要的参考信息。例如，如果终端的缓存中没有等待发送的数据，那么基站就不应该对该终端进行上行发送的调度。</p>
<p>终端通过发送缓存状态报告（Buffer Status Report，BSR），向服务基站报告终端的上行缓存中等待发送的数据的数量。根据 RRC 信令的配置，终端将上行逻辑信道进行分组，采用逻辑信道组（Logical Channel Group，LCG）为单位进行缓存状态的报告。</p>
<p>终端缓存状态报告的 MAC 控制单元包括两种格式—短格式／截断格式，或者长格式。短格式进行 1 个逻辑信道组对应的缓存状态报告，相应的 MAC 控制单元由逻辑信道组标识（LCG ID）和缓存数据量大小组成。长格式进行 4 个逻辑信道组的缓存状态报告，发送的 4 个关于缓存大小的消息分别对应于编号 0 到编号 3 的 4 个逻辑信道组。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_18.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_18.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_18.webp" data-sub-html="<h2>MAC 控制单元——缓存状态报告</h2>">
        
    </a><figcaption class="image-caption">MAC 控制单元——缓存状态报告</figcaption>
    </figure>
<h5 id="功率余量报告">功率余量报告</h5>
<p>上行信号的发送受到终端最大发射功率的限制，所以基站在调度终端进行上行发送的时候需要参考终端发射功率的情况。例如：如果终端处于小区边缘，已经接近最大发射功率的限制，在这种情况下，基站如果调度这个终端使用大量资源进行大数据量的上行发送，而终端由于最大发射功率的限制可能无法保证发射信号的质量，因而导致信息传输的错误。所以基站需要根据对终端发射功率情况的了解，避免出现这样的情况。</p>
<p>通过功率余量报告，终端向基站报告上行数据信道当前的发射功率距离终端上行最大发射功率之间的余量，该信息作为基站进行上行功率控制和上行资源调度的参考。功率余量报告的传输由 RRC 信令进行配置，包括周期性的方式或者传播损耗的变化超过设定的门限都可以触发功率余量消息的上报。</p>
<p>功率余量报告的 MAC 控制单元包括 2 个比特的预留字段和 6 个比特的功率余量（Power Headroom，PH）信息，指示从 −23dB 到 40dB 范围之内的数值。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_19.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_19.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_19.webp" data-sub-html="<h2>MAC 控制单元——功率余量报告</h2>">
        
    </a><figcaption class="image-caption">MAC 控制单元——功率余量报告</figcaption>
    </figure>
<h4 id="上行时间同步的保持">上行时间同步的保持</h4>
<p>在下行方向上，终端通过检测基站的同步和导频信号，与基站下行信号的发送时间取得同步，实现下行信号的接收。与此相类似，为了实现上行信号的传输，终端需要与基站取得上行方向的同步。在获得上行同步的过程中，终端根据基站的指示调整上行信号的发送时间，使得无论终端距离基站是远或者是近，它们发送的上行信号到达基站的时间是对齐的，并且符合基站的定时关系，这样方便基站对用户信号的接收，以及对多个用户信号之间干扰的管理和控制。</p>
<p>对于空闲状态或者处于连接状态但上行已经失去同步的终端，需要通过前面章节中所描述的上行随机接入过程，获得上行同步。对处于连接状态，上行没有失去同步的终端，基站使用 MAC 控制单元向终端指示定时提前（Time Advanced，TA）命令，对终端的上行发送时间进行调整，实现终端与系统之间上行时间同步的保持。</p>
<p>定时提前命令的 MAC 控制单元包括 2 个比特的预留字段和 6 个比特的 TA 命令信息。定时调整的精度是 16Ts ，即 16×1/(15×1 000×2 048)s 约等于 0.52μs。因为 6 个比特 TA 命令表示的是从 −31 到+32 的范围，所以每个定时提前命令能够调整的时间范围是 −16.15 ～+16.67μs。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_20.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_20.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_20.webp" data-sub-html="<h2>MAC 控制单元——定时提前命令</h2>">
        
    </a><figcaption class="image-caption">MAC 控制单元——定时提前命令</figcaption>
    </figure>
<h4 id="不连续接收功能">不连续接收功能</h4>
<p>不连续接收（Discontinuous Reception，DRX）是一种用于实现终端省电的功能。根据 RRC 信令进行配置的 DRX 功能，可以对处于连接状态的终端监测物理层下行控制信道（PDCCH）的方式进行控制。在不使用 DRX 功能的时候，终端需要对 PDCCH 信道进行连续的监测，在每一个 TTI（1ms），终端都需要对 PDCCH 信道进行监测，寻找其中可能属于自己的数据调度信息。通过配置 DRX 功能，设置了“激活”时间和“休眠”时间。在激活的时间里，终端需要对 PDCCH 信道进行监测；而在休眠的时间中，终端不需要对 PDCCH 信道进行监测，基站也不会向该终端进行数据传输的调度，所以可以节省终端的耗电。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_21.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_21.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_21.webp" data-sub-html="<h2>不连续接收（DRX）功能</h2>">
        
    </a><figcaption class="image-caption">不连续接收（DRX）功能</figcaption>
    </figure>
<p>关于终端使用 DRX 功能的过程，首先通过高层 RRC 信令对终端设置 DRX 的相关配置，包括 DRX 周期、激活和休眠时间等。在工作过程中，采用 MAC 层控制信令开启或者关闭终端的 DRX 功能。MAC 层 DRX 命令采用类型为 DRX 命令的 MAC 控制单元进行指示，所对应的 MAC PDU 子包头指示 MAC 控制单元的类型是 DRX 命令，因为除了指示存在 DRX 命令之外，不需要其他的信息，所以相应的 MAC 控制单元部分的长度是 0。</p>]]></description>
</item><item>
    <title>LTE 系列：RLC 层详解</title>
    <link>https://www.techkoala.top/lte_rlc/</link>
    <pubDate>Mon, 31 Aug 2020 21:00:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_rlc/</guid>
    <description><![CDATA[<blockquote>
<p>LTE RLC 层详解</p>
</blockquote>
<h2 id="无线链路控制rlc">无线链路控制（RLC）</h2>
<p>无线链路控制（Radio Link Control，RLC）层的主要功能是：</p>
<ul>
<li>根据下层指示的数据包传输大小对来自上层的数据包进行连接、分段和重组</li>
<li>数据包的顺序传输和重复性检测</li>
<li>自动重传请求（Automatic Repeat Request，ARQ）的数据纠错</li>
</ul>
<p>针对<strong>每一个</strong>无线承载配置一个 RLC 实体，经过 RLC 层协议功能的处理后，数据以逻辑信道的方式输出到下层的 MAC 层。根据所传输消息的不同特点，RLC 实体有 3 种工作模式：</p>
<ul>
<li>透明模式（Transparent Mode，TM）</li>
<li>确认模式（Acknowledged Mode，AM）</li>
<li>非确认模式（Unacknowledged Mode，UM）</li>
</ul>
<h3 id="透明模式tm">透明模式（TM）</h3>
<p>此模式下，RLC 子层是完全透明的，<strong>不执行任何功能</strong>，例如不添加 RLC 包头、不进行数据分段或者连接，即来自上层的数据在 RLC 层<strong>不进行任何处理</strong>，“透明”地传输到下层的 MAC 层。透明模式用于广播、寻呼和公用控制信道等信息需要传输给多个用户的情况，相对应于广播、上下行公用控制和寻呼等逻辑信道。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@masterhttps://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_4.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@masterhttps://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_4.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@masterhttps://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_4.webp" data-sub-html="<h2>TM 模式数据消息的 RLC PDU 格式</h2>">
        
    </a><figcaption class="image-caption">TM 模式数据消息的 RLC PDU 格式</figcaption>
    </figure>
<h3 id="确认模式am">确认模式（AM）</h3>
<p>此模式用于提供高可靠性的数据传输服务，例如 TCP/IP 数据业务或者 RRC 控制信令的传输，包括承载上下行专用数据信息和专用控制信息的逻辑信道。</p>
<p>在此模式下，RLC 子层<strong>执行所有功能</strong>，包括：</p>
<ul>
<li>数据包的连接、分段和重组</li>
<li>数据包的顺序传输和重复性检测</li>
<li>基于滑动窗进行错误数据包重新传输的 ARQ 纠错机制</li>
</ul>
<p>AM 模式的 RLC PDU 由 RLC 包头和 RLC SDU 组成，RLC 包头包括 D/C，RF，P，FI， E 和 SN 字段。如果 RLC PDU 中包含多于 1 个数据字段，那么相对应的 RLC 包头还将包括 E 和 LI 字段，以分别对应于各个数据字段。以下是 RLC 包头各个字段的具体含义。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_5.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_5.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_5.webp" data-sub-html="<h2>AM 模式数据消息的 RLC PDU 格式</h2>">
        
    </a><figcaption class="image-caption">AM 模式数据消息的 RLC PDU 格式</figcaption>
    </figure>
<ul>
<li>D/C（Data/Control）字段指示该 RLC PDU 是“RLC 数据 PDU”还是“RLC 控制 PDU”，在 Release 8 版本中，RLC 控制 PDU 只有 1 种，即 RLC 状态 PDU。</li>
<li>RF（Re-segmentation Flag）字段指示该 RLC PDU 是一个 AM 模式 PDU，还是一个 AM 模式的 PDU 分段。因为，在 AM 模式的情况，数据包进行 ARQ 重传的时候，可能需要对初次传输时的 AM PDU 进行分段，因而形成 AM PDU 分段。</li>
<li>P（Polling）字段指示是否要求接收端对等的 RLC 实体进行 1 次 RLC 状态的报告。</li>
<li>FI（Framing Indicator）字段指示 RLC PDU 的数据字段是否是 RLC SDU 的开始或者结尾部分。2 个比特的信息指示了“是开始不是结尾”、“是结尾不是开始”、“既不是结尾也不是开始”、“既包含了结尾也包含了开始”一共 4 种可能的状态。</li>
<li>E（Extension）字段指示后面是否还有 E 和 LI 字段。</li>
<li>SN（Sequence Number）字段指示 RLC PDU 的序号，序号采用递增的方式。对于 AM 模式下重传的 AM PDU 或者 AM PDU 分段，采用初传的 AM PDU 所对应的序号。</li>
<li>LI（Length Indicator）字段指示对应的数据字段的字节长度。</li>
</ul>
<p>在 AM 模式下，RLC 层使用 ARQ 纠错机制对传输错误的数据包进行重传，由于下层指示的数据包传输大小可能与初次传输时候的情况有所不同，可能需要对初次传输的 AM PDU 进行分段，因此形成了“AM PDU 分段”的格式。与 AM PDU 相比较，AM PDU 分段在包头部分多了两个字段：LSF 和 SO。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_6.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_6.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_6.webp" data-sub-html="<h2>AM 模式数据消息的 RLC PDU 分段的格式</h2>">
        
    </a><figcaption class="image-caption">AM 模式数据消息的 RLC PDU 分段的格式</figcaption>
    </figure>
<ul>
<li>LSF（Last Segment Flag）字段指示这个 AM PDU 分段是否是所对应的初次传输的 AM PDU 的最后一个分段。</li>
<li>SO（Segment Offset）字段指示这个 AM PDU 分段在所对应的初次传输的 AM PDU 中的位置，具体是“这个 AM PDU 分段的第 1 个字节”在所对应的初次传输的 AM PDU 中的字节位置。</li>
</ul>
<p>除了 RLC 数据 PDU 之外，AM 模式下还可能传输 RLC 控制 PDU，进行 RLC 状态的报告。由数据接收方的 RLC 实体向数据发送方对等的 RLC 实体发送 RLC 状态 PDU，报告 AM PDU 数据包的接收状态，包括正确接收的数据包的最后序号，以及接收错误的数据包的序号。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_7.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_7.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_7.webp" data-sub-html="<h2>RLC 状态 PDU</h2>">
        
    </a><figcaption class="image-caption">RLC 状态 PDU</figcaption>
    </figure>
<ul>
<li>CPT（Control PDU Type）字段指示该 RLC 控制 PDU 的类型</li>
<li>ACK_SN（Acknowledgement SN）字段指示接收正确的数据包的最后一个序列号，不包含 ACK_SN 本身所指示的数据包，以及由 NACK_SN 所指出的接收错误的数据包</li>
<li>E1（Extension bit 1）字段指示后面是否跟随有 NACK_SN，E1 和 E2 字段</li>
<li>NACK_SN（Negative Acknowledgement SN）字段指示接收错误或者部分出错的 AM PDU 数据包的序列号</li>
<li>E2（Extension bit 2）字段指示这个 NACK_SN 后面是否跟随有 SOstart 和 SOend 字段</li>
<li>SOstart：在 AM PDU 数据包部分出错的情况下，SOstart 字段指示出错部分的第一个字节在 AM PDU 数据包中的位置</li>
<li>SOend 在 AM PDU 数据包部分出错的情况下，SOend 字段指示出错部分的最后一个字节在 AM PDU 数据包中的位置</li>
</ul>
<h3 id="非确认模式um">非确认模式（UM）</h3>
<p>此模式与确认模式的区别是<strong>不进行</strong>错误数据包重传的 ARQ 纠错。UM 模式主要用于对数据传输正确性的要求不是很高的场景，例如广播信道或者 VoIP 业务，包括上下行专用数据逻辑信道和多媒体广播多播业务（Multimedia Broadcast Multicast Service，MBMS）专用的控制和数据逻辑信道。非确认模式 RLC 子层仍然执行数据包的连接、分段和重组，数据包的顺序传输和重复性检测的功能。</p>
<p>与 AM 模式相比较，UM 模式的 RLC PUD 少了 3 个字段：D/C、RF 和 P。因为 RLC 控制 PDU 只在 AM 模式进行传输，UM 模式仅传输 RLC 数据 PDU，因此不需要指示 RLC 控制或者 RLC 数据信息的 D/C 字段。UM 模式不进行 ARQ 纠错的重传，因此不会出现数据包重传需要重新分段的情况，所以不需要指示数据分段的 RF 字段。P 字段所指示的 RLC 状态报告也仅适用于 AM 模式，因此 UM 模式的情况下不需要这个字段。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_8.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_8.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_8.webp" data-sub-html="<h2>UM 模式数据消息的 RLC PDU 格式</h2>">
        
    </a><figcaption class="image-caption">UM 模式数据消息的 RLC PDU 格式</figcaption>
    </figure>
<h2 id="参考">参考</h2>
<ul>
<li>[1] LTE-Advanced 关键技术详解</li>
</ul>]]></description>
</item><item>
    <title>LTE 系列：PDCP 层详解</title>
    <link>https://www.techkoala.top/lte_pdcp/</link>
    <pubDate>Mon, 31 Aug 2020 21:00:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_pdcp/</guid>
    <description><![CDATA[<blockquote>
<p>LTE PDCP 层详解</p>
</blockquote>
<h2 id="分组数据会聚协议pdcp">分组数据会聚协议（PDCP）</h2>
<p>分组数据会聚协议（Packet Data Convergence Protocol，PDCP）层的主要功能是进行 <code>IP 数据包头压缩</code>、<code>数据加密</code>和<code>控制信令的完整性保护</code>。</p>
<p>对于来自上层的数据包，将针对<strong>每一个</strong>无线承载建立一个 <code>PDCP 实体</code>。首先对数据包进行编号，然后根据配置对数据包进行 <strong>IP 包头压缩</strong>，<strong>数据加密</strong>和<strong>控制信令完整性保护</strong>的操作，形成 <code>PDCP 服务数据单元</code>（Service Data Unit，SDU），最后添加包含编号的 <code>PDCP 包头</code>，形成 <code>PDCP 协议数据单元</code>（Protocol Data Unit，PDU）作为 <code>PDCP</code> 子层协议功能的处理结果向下层 <code>RLC</code> 子层输出。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@masterhttps://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_3.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@masterhttps://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_3.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@masterhttps://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_3.webp" data-sub-html="<h2>PDCP 协议数据单元格式</h2>">
        
    </a><figcaption class="image-caption">PDCP 协议数据单元格式</figcaption>
    </figure>
<ul>
<li>R 表示预留的字段，都填充为 0</li>
<li>D/C 字段指示控制面或者数据面的 PDCP 包，控制面为 0，数据面为 1</li>
<li>MAC-I 是控制信令完整性保护的字段，在不使用完整性保护功能的时候，都填充为 0</li>
</ul>
<h2 id="参考">参考</h2>
<ul>
<li>[1] LTE-Advanced 关键技术详解</li>
</ul>]]></description>
</item><item>
    <title>LTE 系列：无线接入网上层协议</title>
    <link>https://www.techkoala.top/upper_layer_protocol/</link>
    <pubDate>Mon, 31 Aug 2020 16:09:24 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/upper_layer_protocol/</guid>
    <description><![CDATA[<blockquote>
<p>LTE PDCP 协议详解</p>
</blockquote>
<h2 id="无线接入网">无线接入网</h2>
<p>由 E-NodeB 组成的无线接入网是系统与终端用户进行通信的接口，它的功能分为<code>数据面</code>和<code>控制面</code>两个部分：</p>
<ul>
<li><strong>数据面</strong>负责用户数据信息的传输</li>
<li><strong>控制面</strong>负责系统控制功能以及相关信息的传输和处理</li>
</ul>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_1.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_1.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_1.webp" data-sub-html="<h2>LTE 接入网协议架构</h2>">
        
    </a><figcaption class="image-caption">LTE 接入网协议架构</figcaption>
    </figure>
<ul>
<li><a href="https://www.techkoala.top/lte_pdcp/" target="_blank" rel="noopener noreffer">分组数据会聚协议（PDCP）</a></li>
<li><a href="https://www.techkoala.top/lte_rlc/" target="_blank" rel="noopener noreffer">无线链路控制（RLC）</a></li>
<li><a href="https://www.techkoala.top/lte_mac/" target="_blank" rel="noopener noreffer">媒体接入控制（MAC）</a></li>
<li><a href="https://www.techkoala.top/lte_rrc/" target="_blank" rel="noopener noreffer">无线资源控制（RRC）</a></li>
</ul>
<p>无线接入网向核心网提供<strong>无线承载</strong>服务。</p>
<p>针对每一个用户可以建立 1 个或者多个的无线承载，来自核心网 <code>S1</code> 接口的 <code>IP</code> 数据包根据不同的服务质量要求（Quality of Service，QoS）可以映射在不同的无线承载上。然后，数据包将分别经过 <code>PDCP</code>$\Longrightarrow$<code>RLC</code>$\Longrightarrow$<code>MAC</code> 各层协议地处理：</p>
<ul>
<li><code>PDCP</code> 层完成的功能包括 <code>IP</code> 数据包的头压缩、数据加密以及控制信令的完整性保护。</li>
<li><code>RLC</code> 层主要进行自动重传请求（Automatic Repeat Request，ARQ）的功能。</li>
<li><code>MAC</code> 层的主要功能包括动态资源调度、逻辑信道复用以及混合自动重传（Hybrid Automatic Repeat Request，HARQ）。</li>
</ul>
<p>经过 <code>MAC</code> 层协议的处理后，形成 1 个或者多个传输信道。最终通过物理层的处理在无线信号上进行传输。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_2.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_2.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_upper_layer_protocol/LTE_upper_layer_protocol_2.webp" data-sub-html="<h2>LTE 接入网协议功能和数据处理流程</h2>">
        
    </a><figcaption class="image-caption">LTE 接入网协议功能和数据处理流程</figcaption>
    </figure>
<p>控制面主要的控制功能包括：</p>
<ul>
<li>无线接入网的无线资源管理（Radio Resource Control，RRC）。无线资源管理（RRC）的主要功能包括<strong>系统信息的广播</strong>、<strong>终端的移动性管理</strong>，以及<strong>信令和数据的连接控制</strong>。</li>
<li>来自核心网移动性管理实体（MME）的非接入层（NAS）消息的控制功能，包括 <strong>EPS 系统承载</strong>（Evolved Packet System，EPS）的管理，<strong>空闲状态终端的移动性处理和寻呼</strong>，<strong>终端鉴权</strong>以及<strong>安全性</strong>方面的控制。</li>
</ul>
<h2 id="参考">参考</h2>
<ul>
<li>[1] LTE-Advanced 关键技术详解</li>
</ul>]]></description>
</item><item>
    <title>LTE 系列：系统总体架构</title>
    <link>https://www.techkoala.top/the_overall_architecture_of_the_lte_system/</link>
    <pubDate>Mon, 31 Aug 2020 13:17:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/the_overall_architecture_of_the_lte_system/</guid>
    <description><![CDATA[<blockquote>
<p>LTE 系统总体架构分解</p>
</blockquote>
<h2 id="系统架构演进">系统架构演进</h2>
<p>系统架构演进（又名 SAE，System Architecture Evolution）是 3GPP 所制定的 LTE 无线通信的核心网络标准。</p>
<p><code>SAE</code> 是基于 <code>GPRS</code> 核心网的演进，其主要差别为：</p>
<ul>
<li>简化架构</li>
<li>全 <code>IP</code> 网络（<code>AIPN</code>）</li>
<li>支持提供更高吞吐量和更低延迟的接入网</li>
<li>多个异构接入网络的互通，包括 <code>E-UTRA</code>（LTE 和 LTE 升级版的接入网），3GPP 已有系统（例如 <code>GPRS</code> 和 <code>UMTS</code> 的接入网 <code>GERAN</code> 和 <code>UTRAN</code>），也支持与非 3GPP 系统之间的互通（例如 <code>WiMAX</code>、<code>CDMA2000</code> 或 <code>WIFI</code>）</li>
</ul>
<p><code>SAE</code> 是的传输使用全 <code>IP</code> 网络，从而支持系统的控制平面和用户平面的分离。</p>
<p><code>SAE</code> 体系结构的主要组成部分是核心分组网演进（EPC，Evolved Packet Core )，也被称为 <code>SAE</code> 核心。<code>EPC</code> 作用与 <code>GPRS</code> 网络相似，包含移动性管理组件（<code>MME</code>），服务网关（<code>S-GW</code>）和 <code>PDN</code> 网关（PDN Gateway）等网元。</p>
<h2 id="系统架构">系统架构</h2>
<p>LTE 系统可以分为<code>核心网</code>和<code>无线接入网</code>两个部分，如下图所示：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_System_Structure/Structure.webp" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_System_Structure/Structure.webp" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE_System_Structure/Structure.webp" data-sub-html="<h2>LTE 系统总体架构图</h2>">
        
    </a><figcaption class="image-caption">LTE 系统总体架构图</figcaption>
    </figure>
<h3 id="核心网">核心网</h3>
<p><strong>核心网</strong>包括：</p>
<ul>
<li>
<p><code>移动性管理实体</code>（MME）</p>
</li>
<li>
<p><code>服务网关</code>（S-GW）</p>
</li>
<li>
<p><code>分组数据网网关</code>（P-GW）</p>
<p><code>MME</code>实体负责移动性管理相关的控制功能，包括：</p>
<ul>
<li>对终端位置跟踪区域列表的管理</li>
<li>对处于空闲状态的终端发起寻呼</li>
<li>为终端选择接入的 <code>P-GW</code> 和 <code>S-GW</code></li>
<li>漫游和鉴权功能</li>
<li>非接入层（Non-Access Stratum，NAS）信令功能</li>
<li>信令安全和接入层（Access Stratum，AS）的安全控制</li>
<li>接入网之间的移动性管理（包括接入网内切换时的 MME 选择，向 2G 或者 3G 的不同接入网切换时的 SGSN 选择）</li>
<li>网络承载管理的功能</li>
</ul>
<p>服务网关（<code>S-GW</code>）负责数据承载的相关功能，包括：</p>
<ul>
<li>数据包的路由和转发，<code>E-NodeB</code> 之间切换或者 <code>E-NodeB</code> 和 <code>GSM/WCDMA/TD-SCDMA</code> 系统的不同接入网之间切换时的数据锚点</li>
<li>上下行传输层数据包的优先级标识</li>
<li>运营商内部和运营商之间的终端计费</li>
<li>对用户通信进行合法侦听的功能</li>
</ul>
<p>PDN 网关（<code>P-GW</code>）是核心网与外部因特网的接口，完成的主要功能包括</p>
<ul>
<li>针对每个用户的数据包过滤</li>
<li>终端的 <code>IP</code> 地址分配</li>
<li>基于业务的计费功能</li>
<li>门控和速率强制功能</li>
<li>下行传输层数据包的优先级标识</li>
<li>进行合法侦听的功能</li>
</ul>
</li>
</ul>
<h3 id="无线接入网">无线接入网</h3>
<p><strong>无线接入网</strong>是系统与移动用户终端进行通信的接口，LTE 无线接入网采用扁平的网络结构，仅包含一种网络节点，即 <code>E-NodeB</code>（LTE 基站）：</p>
<ul>
<li>
<p><code>E-NodeB</code> 之间通过 <code>X2</code> 接口进行互连，<code>E-NodeB</code> 通过 <code>S1</code> 接口与核心网进行连接，分为 <code>S1-MME</code> 和 <code>S1-U</code> 接口分别与核心网的 <code>MME</code> 和 <code>S-GW</code> 设备进行连接。为了实现负荷分担和容灾备份的功能，<code>E-NodeB</code> 和 <code>MME/S-GW</code> 之间可以进行多对多的连接，即 1 个 <code>MME/S-GW</code> 可以和多个 <code>E-NodeB</code> 连接，1 个 <code>E-NodeB</code> 也可以和多个 <code>MME/S-GW</code> 连接。</p>
</li>
<li>
<p><code>E-NodeB</code> 负责无线接入网部分的功能，主要包括：无线资源管理（包括无线承载控制、无线接入控制、连接的移动性控制、动态的资源调度），<code>IP</code> 头压缩和用户数据加密，为附着的终端选择进行控制功能的 <code>MME</code> 实体，将用户数据路由至 <code>S-GW</code> 服务网关，寻呼、广播和公共报警消息的调度与传输，以及配置用于终端移动性管理和数据调度的物理层信号测量和测量的上报。<code>E-NodeB</code> 之间通过 <code>X2</code> 接口进行互连，<code>X2</code> 接口主要用于支持终端在 <code>E-NodeB</code> 之间的切换，包括信令的交互以及切换过程中可能进行的数据转发，<code>X2</code> 接口还可以用于在小区之间交互无线资源管理的消息，实现小区间协调进行干扰抑制的功能。</p>
</li>
</ul>
<h2 id="参考">参考</h2>
<ul>
<li>
<p>[1] <a href="https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B" target="_blank" rel="noopener noreffer">SAE</a></p>
</li>
<li>
<p>[2] LTE-Advanced 关键技术详解</p>
</li>
</ul>]]></description>
</item><item>
    <title>LTE 系列：上行链路帧结构</title>
    <link>https://www.techkoala.top/lte_uplink_frame_structure/</link>
    <pubDate>Sat, 10 Aug 2019 19:46:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_uplink_frame_structure/</guid>
    <description><![CDATA[<blockquote>
<p>LTE 上行链路帧结构详细讲解</p>
</blockquote>
<p>LTE 使用 SC (单载波)-FDMA 作为上行链路信号。</p>
<h2 id="时隙结构">时隙结构</h2>
<p>从下面的时隙结构可以看出，LTE 上下行链路的时隙结构是相似的：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/FDD_UL_FrameStructure_Symbols.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/FDD_UL_FrameStructure_Symbols.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/FDD_UL_FrameStructure_Symbols.png" data-sub-html="<h2>上行时隙结构</h2>">
        
    </a><figcaption class="image-caption">上行时隙结构</figcaption>
    </figure>
<p>与下行链路相同，上行链路中的帧时间和时隙时间与下行链路中相同。并且资源块结构和下行链路上也相同。如上所述，在一个时隙中的 7 个符号在上行链路和下行链路上也是相同的。</p>
<p>你可能会注意到的一点区别是每个物理信道的位置。在下行链路情况下，信道通常占用整个带宽，但是上行链路时隙中的信道更局限。例如，PUCCH 仅位于整个带宽中的的最低端和最高端。</p>
<h3 id="pucch-rs">PUCCH RS</h3>
<p>携带解调 PUCCH 所需的参考信号。这意味着如果此部分配置不正确或 eNodeB 检测不到此部件，则 eNodeB 无法解码 PUCCH。</p>
<h3 id="pucch">PUCCH</h3>
<p>此信道可以承载大量信息(UCI)，但根据配置的不同，它只能承载以下信息中的一部分：</p>
<ul>
<li>ACK/NACK for the recieved PDSCH data</li>
<li>CQI</li>
<li>RI</li>
<li>PMI</li>
</ul>
<p>正如你在时隙结构中看到的，PUCCH 以子帧内两个时隙之间交替的方式位于上行链路频域的两端，这意味着如果 PUCCH 是时隙 0 (第一个时隙) 中的频域的最低部分，并且它将位于时隙 1 (第二个时隙) 中的频域的最高部分。分配给 PUCCH 的资源元素的确切数量由网络确定，并且配置通过 SIB2 广播到 UE。</p>
<p>详细的 PUCHH 结构参考：</p>
<ul>
<li>
<p><a href="http://www.sharetechnote.com/html/Handbook_LTE_PUCCH_Format.html" target="_blank" rel="noopener noreffer">PUCCH Format</a></p>
</li>
<li>
<p><a href="http://www.sharetechnote.com/html/Handbook_LTE_PUCCH_Format1_Location.html" target="_blank" rel="noopener noreffer">PUCCH Format 1,1a,1b Location</a></p>
</li>
<li>
<p><a href="http://www.sharetechnote.com/html/Handbook_LTE_PUCCH_Format2_Location.html" target="_blank" rel="noopener noreffer">PUCCH Format 2,2a,2b Location</a></p>
</li>
</ul>
<h3 id="pusch-rs">PUSCH RS</h3>
<p>携带解调 PUSCH 所需的参考信号。</p>
<h3 id="pusch">PUSCH</h3>
<p>承载 UE 尝试发送的上行链路数据。并且除了上行链路数据之外，还可以携带 UE 接收的 PDSCH 的 ACK/NACK。</p>
<h3 id="srs">SRS</h3>
<p>参考 <a href="http://www.sharetechnote.com/html/Handbook_LTE_SRS.html" target="_blank" rel="noopener noreffer">SRS in Quick Reference</a></p>
<h2 id="上行资源网格">上行资源网格</h2>
<p>具体来说，上行资源还有一种网格格式，如下所示:</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/36_211_Fig5_2_1-1_UL_ResourceGrid.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/36_211_Fig5_2_1-1_UL_ResourceGrid.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/36_211_Fig5_2_1-1_UL_ResourceGrid.png" data-sub-html="<h2>上行资源网格</h2>">
        
    </a><figcaption class="image-caption">上行资源网格</figcaption>
    </figure>
<p>最小的单元是 “资源元素 (RE)”，最小的资源分配单元是 RB (资源块)，它沿时域跨越 7 RE，沿频域跨越 12 RE。 这意味着一个 RB 有 84 个单元 (7x12)。</p>
<h2 id="通信中的信道">通信中的信道</h2>
<p>下图显示了上行/下行数据传输的总体顺序。你可以将数据传输序列图与 DL/UL 帧结构中每个通道的特定位置相关联。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/ChannelFlow_Small.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/ChannelFlow_Small.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/ChannelFlow_Small.png" data-sub-html="<h2>LTE 上下行传输顺序图</h2>">
        
    </a><figcaption class="image-caption">LTE 上下行传输顺序图</figcaption>
    </figure>
<h2 id="帧结构总览">帧结构总览</h2>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/UL_SlotStructure_Constellation.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/UL_SlotStructure_Constellation.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-UL-FS/UL_SlotStructure_Constellation.png" data-sub-html="<h2>上行帧结构概览</h2>">
        
    </a><figcaption class="image-caption">上行帧结构概览</figcaption>
    </figure>
<h2 id="参考">参考</h2>
<ul>
<li>[1] <a href="http://www.sharetechnote.com/html/FrameStructure_UL.html" target="_blank" rel="noopener noreffer">UL FrameStructure</a></li>
</ul>]]></description>
</item><item>
    <title>LTE 系列：帧中的物理信道和信号</title>
    <link>https://www.techkoala.top/lte_physical_channels_and_signals/</link>
    <pubDate>Tue, 30 Jul 2019 22:49:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_physical_channels_and_signals/</guid>
    <description><![CDATA[<blockquote>
<p>概述 LTE 信息帧中的各类物理通道和信号</p>
</blockquote>
<p>在 <a href="https://www.techkoala.top/lte_downlink_frame_structure/" target="_blank" rel="noopener noreffer">此前的一篇文章</a> 中，我们详细了解 <code>LTE</code> 下行链路的帧结构，其中包含了各种物理信道和信号，本文将会做一个概要性的讲述，用作一个速查表。</p>
<h2 id="pbch">PBCH</h2>
<p><strong>Physical Broadcast Channel，物理广播通道</strong></p>
<ul>
<li>
<p>它只携带 MIB (master information block，主系统信息块)</p>
</li>
<li>
<p>它使用的是 QPSK</p>
</li>
<li>
<p>映射到 6 个资源块（72 个子载波），以 0 号子帧中的 DC 子载波为中心</p>
</li>
<li>
<p>映射到不为传输参考信号、PDCCH 或 PCHICH 而保留的资源元素</p>
</li>
<li>
<p>详情参考 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PBCH.html" target="_blank" rel="noopener noreffer">Physical Layer : PBCH</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PBCH.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PBCH</a> 页面（待填坑）</p>
</li>
</ul>
<h2 id="pcfich">PCFICH</h2>
<p><strong>Physical Control Format Indicator Channel，物理控制格式指示通道</strong></p>
<ul>
<li>
<p>它映射到每个下行链路子帧中的第一个 OFDM 符号</p>
</li>
<li>
<p>它包含了携带控制信道（PDCCH 和 PHICH）的 OFDM 符号数量的信息。UE 对该信道进行解码，以找出该帧中为控制信道（PDCCH 和 PHICH）分配了多少个 OFDM 符号</p>
</li>
<li>
<p>它是子帧的第一个 OFDM 符号的 16 个数据子载波</p>
</li>
<li>
<p>PCFICH 数据由 4 个 REG 承载，并且这 4 个 REG 均匀分布在整个频带上，与带宽无关</p>
</li>
<li>
<p>PCFICH 的确切位置由小区 ID 和带宽确定</p>
</li>
<li>
<p>详细信息参阅 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PCFICH.html" target="_blank" rel="noopener noreffer">Physical Layer : PCFICH</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PCFICH.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PCFICH</a> 页面</p>
</li>
</ul>
<h2 id="pdcch">PDCCH</h2>
<p><strong>Physical Downlink Control Channel，物理下行控制信道</strong></p>
<ul>
<li>
<p>映射到下行链路每个子帧中前 L 个 OFDM 符号</p>
</li>
<li>
<p>PDCCH 的符号数（L）可以是 1,2 或 3</p>
</li>
<li>
<p>PDCCH 的符号数由 PCFICH 指定</p>
</li>
<li>
<p>PDCCH 承载 DCI，而 DCI 承载传输格式，资源分配，与 DL-SCH，UL-SCH 和 PCH 相关的 H-ARQ 信息以及其他取决于 DCI 格式的信息</p>
</li>
<li>
<p>PDCCH 还携带用于 UL 调度分配的 DCI 0（例如，UL 授权）</p>
</li>
<li>
<p>可以在单个子帧中分配多个 PDCCH，并且 UE 对所有 PDCCH 进行盲解码</p>
</li>
<li>
<p>调制方案是 QPSK</p>
</li>
<li>
<p>PDCCH 类似于 HSDPA 的 HS-SCCH、R99 的 PDCCH 和 HSUPA 的 E-AGCH/E-RGCH</p>
</li>
<li>
<p>即使 PDCCH 具有很多功能，但并非所有功能都同时使用，因此 PDCCH 配置应灵活设置</p>
</li>
<li>
<p>如果您对该通道中的详细信息映射感兴趣，请参阅 36.211 中的 6.8.1。简要说明如下：</p>
</li>
</ul>
<blockquote>
<p>物理下行链路控制信道承载调度分配和其他控制信息。物理控制信道是在一个或几个连续的控制信道元素（CCE）的聚合上发送的，其中控制信道元素对应于 9 个资源元素组。未分配给 PCFICH 或 PHICH 的资源元素组的数量为 REG N。系统中可用的 CCE 从 0 和 N_CCE-1 编号，其中 N_CCE = floor（N_REG/9）。</p>
</blockquote>
<ul>
<li>详细信息参阅物理层 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PDCCH.html" target="_blank" rel="noopener noreffer">Physical Layer : PDCCH</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PDCCH.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PDCCH</a> 页面</li>
</ul>
<h2 id="phich">PHICH</h2>
<p><strong>Physical Hybrid ARQ Indicator Channel，物理 HARQ 指示信道</strong></p>
<ul>
<li>
<p>对收到的 PUSCH 进行 H-ARQ 反馈</p>
</li>
<li>
<p>UE 在 UL 中传输数据后，等待 PHICH 进行 ACK</p>
</li>
<li>
<p>类似于 HSPA 中的 E-HICH</p>
</li>
<li>
<p>某些情况下，几个 PHICH 使用相同的资源元素构成 PHICH 组</p>
</li>
<li>
<p>详细信息参见 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PHICH_PHICHGroup.html" target="_blank" rel="noopener noreffer">Physical Layer : PHICH</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PHICH.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PHICH </a> 页面</p>
</li>
</ul>
<h2 id="pdsch">PDSCH</h2>
<p><strong>Physical Downlink Shared Channel，物理下行共享信道</strong></p>
<ul>
<li>
<p>携带用户特定的数据（DL 有效负载）</p>
</li>
<li>
<p>携带随机访问响应消息</p>
</li>
<li>
<p>它使用带有 QPSK，16 QAM，64 QAM，256 QAM 调制方案的 AMC（此调制方案由 DCI 承载的 MCS 确定）</p>
</li>
<li>
<p>详细信息参见 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PDSCH.html" target="_blank" rel="noopener noreffer">Physical Layer : PDSCH</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PDSCH.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PDSCH </a> 页面</p>
</li>
</ul>
<h2 id="prach">PRACH</h2>
<p><strong>Physical Random Access Channel，物理随机接入信道</strong></p>
<ul>
<li>
<p>携带随机访问前导码</p>
</li>
<li>
<p>它在频域中占用 72 个子载波（6 RB）的带宽</p>
</li>
<li>
<p>在该信道内是随机访问前导，该随机访问前同步码用 <a href="http://www.sharetechnote.com/html/Handbook_LTE_Zadoff_Chu_Sequence.html" target="_blank" rel="noopener noreffer">Zadoff-Chu 序列</a> 生成</p>
</li>
<li>
<p>详细信息参见 <a href="http://www.sharetechnote.com/html/RACH_LTE.html" target="_blank" rel="noopener noreffer">RACH</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PRACH.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PRACH</a> 页面</p>
</li>
</ul>
<h2 id="p-ss">P-SS</h2>
<p><strong>Primary Synchronization Signal，主同步信号</strong></p>
<ul>
<li>
<p>映射到 72 个活动子载波（6 个资源块），以时隙 0（子帧 0）和时隙 10（子帧 5）中的 DC 子载波为中心。</p>
</li>
<li>
<p>由 62 个 <a href="http://www.sharetechnote.com/html/Handbook_LTE_Zadoff_Chu_Sequence.html" target="_blank" rel="noopener noreffer">Zadoff-Chu 序列值</a> 组成</p>
</li>
<li>
<p>用于下行帧同步</p>
</li>
<li>
<p>决定 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PCI.html" target="_blank" rel="noopener noreffer">物理小区 ID</a> 的关键因素之一</p>
</li>
<li>
<p>详细信息参见 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PSS.html" target="_blank" rel="noopener noreffer">Physical Layer : PSS</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_PSS.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : PSS</a> 页面</p>
</li>
</ul>
<blockquote>
<p>如何从基带捕获的 IQ 数据序列中找到 PSS 的确切位置？是定时同步中最重要的部分之一；也是理解 LTE 协议中非常棘手的部分之一，需要花费很长时间进行研究。</p>
</blockquote>
<h2 id="s-ss">S-SS</h2>
<p><strong>Secondary Synchronization Signal，副同步信号</strong></p>
<p>SSS 是用于无线电帧同步的特定物理层信号，它具有以下列出的特征：</p>
<ul>
<li>
<p>映射到 72 个活动子载波（6 个资源块），以 FDD 中的时隙 0（子帧 0）和时隙 10（子帧 5）的 DC 子载波为中心</p>
</li>
<li>
<p>子帧 0 中的 SSS 序列与子帧 5 中的 SSS 序列互不相同</p>
</li>
<li>
<p>由 62 个加扰序列（基于 m 序列）组成</p>
</li>
<li>
<p>奇偶索引的资源元素的值由不同方程生成</p>
</li>
<li>
<p>用于下行帧同步</p>
</li>
<li>
<p>决定 <a href="http://www.sharetechnote.com/html/Handbook_LTE_PCI.html" target="_blank" rel="noopener noreffer">物理小区 ID</a> 的关键因素之一</p>
</li>
<li>
<p>详细信息参见 <a href="http://www.sharetechnote.com/html/Handbook_LTE_SSS.html" target="_blank" rel="noopener noreffer">Physical Layer : SSS</a> 和 <a href="http://www.sharetechnote.com/html/lte_toolbox/Matlab_LteToolbox_SSS.html" target="_blank" rel="noopener noreffer">Matlab Toolbox : SSS</a></p>
</li>
</ul>
<h2 id="rs">RS</h2>
<p><strong>Reference Signal，参考信号</strong></p>
<p>大多数信道（例如，PDSCH，PDCCH，PBCH 等）都用于承载特殊信息（比特序列），它们与更高层的信道相连，但是参考信号是仅存在于 PHY 层的特殊信号，不用于传递任何特定信息。参考信号的目的是为下行链路功率提供参考点。</p>
<p>当 UE 尝试计算 DL 功率（即，来自 eNode-B 的信号的功率）时，它将测量参考信号的功率并将其作为下行链路小区功率。</p>
<p>这些参考信号由每个时隙中的多个特定资源元素承载，并且资源元素的具体位置由天线配置确定。</p>
<h3 id="rs---cell-specific">RS - Cell Specific</h3>
<p>在下图中，红色/蓝色/绿色/黄色是承载参考信号的部分，灰色标记的资源元素是为参考信号保留的部分，但未承载该特定天线的参考信号。（插图基于 36.211 的图 6.10.1.2-1： 下行链路参考信号的映射（正常循环前缀））</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal.png" data-sub-html="<h2>小区特定参考信号</h2>">
        
    </a><figcaption class="image-caption">小区特定参考信号</figcaption>
    </figure>
<p>以下是 4 天线情况下物理信道配置和 RE（资源元素）映射的示例。测量结果来自 LTE 信号分析仪，它测量从 LTE 网络模拟器传出的 LTE 信号。它仅显示 20 Mhz 系统带宽中的一个 RB（RB0）（总共 100 个 RB），并且分别在 LTE 网络发送 MIB/SIB 和 UE 未连接时在天线端口 0、1、2、3 处捕获。你会注意到，每个天线的参考信号位置都不同。 由于此参考信号位置的差异，REG 分组可能由 PCFICH 的不同位置中略有不同。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_4Antenna_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_4Antenna_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_4Antenna_01.png" data-sub-html="<h2>各天线小区特定参考信号</h2>">
        
    </a><figcaption class="image-caption">各天线小区特定参考信号</figcaption>
    </figure>
<p>有两种不同类型的参考信号：小区特定参考信号和 UE 特定参考信号</p>
<p>小区特定参考信号（CRS）：该参考信号在每个子帧处被发送，并且跨越整个工作带宽，通过天线端口 0、1、2、3 发送。</p>
<p>UE 特定参考信号：此参考信号在仅分配给特定 UE 的资源块中传输，并通过天线端口 5 传输。</p>
<p>特定于小区的参考信号的资源元素是否固定？</p>
<p>否，位置会根据物理小区 ID 进行更改，如下所述：</p>
<ul>
<li>
<p>参考信号的时域索引（l）= 固定（l = [0,4]）</p>
</li>
<li>
<p>参考信号的频域索引 k 根据 36.211 6.10.1.2 映射到资源元素中指定的物理小区 ID 而变化。</p>
<p>主要规则是：$k = 6m + (v + v_{shift})mod 6$，其中 v_shift=物理小区 ID mod6。详细信息参阅 36.211 6.10.1.2</p>
</li>
</ul>
<p>下行参考信号携带什么样的值？</p>
<p>该值是 36.211 6.10.1.1 序列生成中定义算法生成的伪随机序列。该序列的确定值之一是物理小区 ID，这意味着物理小区 ID 也影响参考信号的值。</p>
<p>CRS 是否以任何子帧类型（类型 1、2、3）传输？</p>
<p>对于帧结构类型 1，在所有下行链路子帧中发送 CRS。
对于帧结构类型 2，在所有下行链路子帧和 DwPTS 中发送 CRS
对于帧结构类型 3，CRS 在非空子帧中传输</p>
<h3 id="rs---mbsfn">RS - MBSFN</h3>
<p>下图基于 36.211 的图 6.10.2.2-1：MBSFN 参考信号的映射（扩展循环前缀，Δf= 15 kHz）</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R4.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R4.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R4.png" data-sub-html="<h2>Reference Signal - MBSFN</h2>">
        
    </a><figcaption class="image-caption">Reference Signal - MBSFN</figcaption>
    </figure>
<h3 id="rs---ue-specific">RS - UE Specific</h3>
<p>下图基于 36.211 的图 6.10.3.2-1：特定于 UE 的参考信号，天线端口 5（正常循环前缀）的映射</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R5.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R5.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R5.png" data-sub-html="<h2>Reference Signal - UE Specific - Antenna Port 5</h2>">
        
    </a><figcaption class="image-caption">Reference Signal - UE Specific - Antenna Port 5</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R7_10_03.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R7_10_03.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R7_10_03.png" data-sub-html="<h2>Reference Signal - UE Specific - Antenna Port 5</h2>">
        
    </a><figcaption class="image-caption">Reference Signal - UE Specific - Antenna Port 5</figcaption>
    </figure>
<h3 id="rs---positioning">RS - Positioning</h3>
<p>下图基于 36.211 的图 6.10.4.2-1：定位参考信号的映射（正常循环前缀）</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R6.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R6.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R6.png" data-sub-html="<h2>Reference Signal - Positioning - Antenna Port 6</h2>">
        
    </a><figcaption class="image-caption">Reference Signal - Positioning - Antenna Port 6</figcaption>
    </figure>
<h3 id="rs---csi">RS - CSI</h3>
<p>下图基于 36.211 的图 6.10.5.2-1：CSI 参考信号的映射（CSI 配置 0，常规循环前缀）</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R15_R22_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R15_R22_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ReferenceSignal_R15_R22_01.png" data-sub-html="<h2>Reference Signal - CSI - Antenna Port 15,16,17,18,19,20,21,22</h2>">
        
    </a><figcaption class="image-caption">Reference Signal - CSI - Antenna Port 15,16,17,18,19,20,21,22</figcaption>
    </figure>
<h2 id="全帧快照">全帧快照</h2>
<p>下图展示了上述提及的所有物理信道在整个框架上的整体图像：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Map_FullFrame.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Map_FullFrame.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Map_FullFrame.png" data-sub-html="<h2>Full Frame</h2>">
        
    </a><figcaption class="image-caption">Full Frame</figcaption>
    </figure>
<h2 id="通信过程中的物理信道">通信过程中的物理信道</h2>
<p>下图显示了上行/下行数据传输的总体顺序：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ChannelFlow_Small.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ChannelFlow_Small.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/ChannelFlow_Small.png" data-sub-html="<h2>数据传输序列图</h2>">
        
    </a><figcaption class="image-caption">数据传输序列图</figcaption>
    </figure>
<h2 id="附加图">附加图</h2>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_01.png" data-sub-html="<h2>Spectrogram - LTE FDD DL - Radio Frame</h2>">
        
    </a><figcaption class="image-caption">Spectrogram - LTE FDD DL - Radio Frame</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_02.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_02.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_02.png" data-sub-html="<h2>Spectrogram - LTE FDD DL - PBCH</h2>">
        
    </a><figcaption class="image-caption">Spectrogram - LTE FDD DL - PBCH</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_03.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_03.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/DL_Spectrogram_03.png" data-sub-html="<h2>Spectrogram - LTE FDD DL - PSS/SSS</h2>">
        
    </a><figcaption class="image-caption">Spectrogram - LTE FDD DL - PSS/SSS</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/LTE_DL_Idle_RF_Profile.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/LTE_DL_Idle_RF_Profile.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-PCS/LTE_DL_Idle_RF_Profile.png" data-sub-html="<h2>Spectrogram - LTE FDD DL - Each Symbol</h2>">
        
    </a><figcaption class="image-caption">Spectrogram - LTE FDD DL - Each Symbol</figcaption>
    </figure>
<h2 id="参考">参考</h2>
<ul>
<li>
<p>[1] <a href="http://www.sharetechnote.com/html/FrameStructure_DL.html" target="_blank" rel="noopener noreffer">Physical Channels and Signals</a></p>
</li>
<li>
<p>[2] <a href="https://www.cnblogs.com/klb561/p/12227359.html" target="_blank" rel="noopener noreffer">LTE 的信道</a></p>
</li>
</ul>]]></description>
</item><item>
    <title>LTE 系列：下行链路帧结构</title>
    <link>https://www.techkoala.top/lte_downlink_frame_structure/</link>
    <pubDate>Mon, 29 Jul 2019 17:53:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/lte_downlink_frame_structure/</guid>
    <description><![CDATA[<blockquote>
<p>LTE 下行链路帧结构详细讲解</p>
</blockquote>
<h2 id="下行帧结构">下行帧结构</h2>
<h3 id="fdd类型-1">FDD——类型 1</h3>
<p>36.211 中 <code>FDD</code> <code>LTE</code> 的帧结构概览图如下所示：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/36_211_Fig4_1_1_FDD_DL_FrameStructure.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/36_211_Fig4_1_1_FDD_DL_FrameStructure.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/36_211_Fig4_1_1_FDD_DL_FrameStructure.png" data-sub-html="<h2>FDD 帧结构</h2>">
        
    </a><figcaption class="image-caption">FDD 帧结构</figcaption>
    </figure>
<p>上图仅显示了帧在时域上的结构，而没有显示频域上的结构。</p>
<p>从图中可以看处：</p>
<ul>
<li>
<p>一帧（一个无线帧，一个系统帧）的持续时间是 10 ms。</p>
</li>
<li>
<p>一帧（10 毫秒）的样本数是 307200（307.200 K）。</p>
</li>
<li>
<p>一帧中有 10 个子帧。</p>
</li>
<li>
<p>一个子帧中有 2 个时隙。</p>
</li>
</ul>
<p>那么一个时隙是时域上最小的结构吗？不，如果进一步放大此结构，则会得到下图：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/FDD_DL_FrameStructure_Symbols.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/FDD_DL_FrameStructure_Symbols.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/FDD_DL_FrameStructure_Symbols.png" data-sub-html="<h2>时隙结构</h2>">
        
    </a><figcaption class="image-caption">时隙结构</figcaption>
    </figure>
<p>可以观察到一个时隙由 7 个<code>符号</code>组成。（一个符号是信号的某个时间跨度，在 I/Q 星座中的一个点。）</p>
<p>在符号的开头，还有一个很小的跨度，称为<code>循环前缀</code>，其余部分是真实的符号数据。</p>
<p><code>LTE</code> 中有两种不同类型的循环前缀。一种是<code>普通循环前缀</code>；另一个是<code>扩展循环前缀</code>，其长度比普通循环前缀更长。（由于一个时隙的长度是固定的且不能更改，因此，如果使用<code>扩展循环前缀</code>，则一个时隙内则只能有 6 个符号）。</p>
<p>继续放大子帧以可以观察到确切的时间和采样，如下图所示：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/FDD_DL_FrameStructure_Subframe_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/FDD_DL_FrameStructure_Subframe_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/FDD_DL_FrameStructure_Subframe_01.png" data-sub-html="<h2>符号结构</h2>">
        
    </a><figcaption class="image-caption">符号结构</figcaption>
    </figure>
<p>此图中显示的长度不随采样率而变化，但是每个符号和 <code>CP</code> 中的采样数随采样率而变化。此图中显示的样本数基于 30.72 Mhz 采样率的情况。</p>
<p>关于上述子帧结构，需要注意的几件事是：</p>
<ul>
<li>
<p>时隙中的第一个 OFDM 符号比剩下的 OFDM 符号长一些。</p>
</li>
<li>
<p>上图中显示的样本数基于以下参数设置：采样率为 30.72M 个样本/秒和 2048 个 bin/IFFT（$N_{ifft}$）。实际采样率和 $N_{ifft}$ 可能会随系统带宽而变化，需要根据特定带宽来缩放。</p>
</li>
<li>
<p>每种系统带宽的典型 $N_{ifft}$ 如下:</p>
</li>
</ul>
<table>
<thead>
<tr>
<th>System BW</th>
<th>Number of RBs</th>
<th>$N_{ifft}$ (bins/IFFT)</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.4</td>
<td>6</td>
<td>128</td>
</tr>
<tr>
<td>3.0</td>
<td>15</td>
<td>256</td>
</tr>
<tr>
<td>5.0</td>
<td>25</td>
<td>512</td>
</tr>
<tr>
<td>10.0</td>
<td>50</td>
<td>1024</td>
</tr>
<tr>
<td>15.0</td>
<td>75</td>
<td>2048</td>
</tr>
<tr>
<td>20.0</td>
<td>100</td>
<td>2048</td>
</tr>
</tbody>
</table>
<p>下图是<code>LTE 资源网格</code>的总体子帧结构：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/LTE_DL_FrameStructure_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/LTE_DL_FrameStructure_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/LTE_DL_FrameStructure_01.png" data-sub-html="<h2>LTE 资源网格</h2>">
        
    </a><figcaption class="image-caption">LTE 资源网格</figcaption>
    </figure>
<p>以下显示所有 4 个天线信号叠加（重叠）的理想情况下的下行链路帧结构和 RE（Resource Element，资源元素）映射的示例。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/LTE_DL_FrameStructure_02.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/LTE_DL_FrameStructure_02.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/LTE_DL_FrameStructure_02.png" data-sub-html="<h2>4天线帧结构和 RE 映射示例</h2>">
        
    </a><figcaption class="image-caption">4天线帧结构和 RE 映射示例</figcaption>
    </figure>
<p>实际上，来自每个天线的信号具有略微不同的符号数据和参考信号位置。 RE 映射的顶部和底部显示的星座图是 <code>LTE</code> 信号分析器测量来自 <code>LTE</code> 网络模拟器的 <code>LTE</code> 信号的测量结果。这是在 <code>LTE</code> 网络正在传输 MIB/SIB 且 <code>UE</code> 未连接的情况下在天线端口 0 处捕获的。如果您使用不同的信道功率（例如 PCFICH 功率，PDCCH 功率，CRS 功率等）执行类似的操作，则可能会看到一些不同的星座图。</p>
<p>现在我们进一步放大结构，但这一次是在频域而不是时域扩展。我们将获得以下完整的详细图：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/PHY_CH_DL.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/PHY_CH_DL.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/PHY_CH_DL.png" data-sub-html="<h2>下行帧结构物理信道</h2>">
        
    </a><figcaption class="image-caption">下行帧结构物理信道</figcaption>
    </figure>
<p>如上所述，我们可以在二维图中表示 LTE 信号。横轴是时域，纵轴是频域。纵轴上的最小单位是子载波，横轴上的最小单位是符号。时域和频域多个较小单位组合成较大单位。</p>
<hr>
<p>首先让我们看一下频域结构：</p>
<ul>
<li>
<p>LTE（无论 OFDM/OFDMA）频带由多个小间隔信道组成，这些小信道称为<code>子载波</code>。</p>
</li>
<li>
<p>无论 LTE 频带的系统带宽是多少，<code>子载波</code>间隔都相同。</p>
</li>
<li>
<p>如果 LTE 信道的系统带宽发生变化，则信道数（子载波）会发生变化，但信道之间的间隔不会发生变化。</p>
</li>
</ul>
<ol>
<li>
<p>子载波和下一个子载波之间的空间是多少？ 15 Khz</p>
</li>
<li>
<p>20 Mhz LTE 频段的信道（子载波）数量是多少？ 1200 个子载波。</p>
</li>
<li>
<p>10 Mhz LTE 频段的信道（子载波）数量是多少？ 600 个子载波。</p>
</li>
<li>
<p>5 Mhz LTE 频段的信道（子载波）数量是多少？ 300 个子载波。</p>
</li>
</ol>
<hr>
<p>接着我们看一下横轴（即时域）的上的基本组成单位。时域上的最小单位是符号，长度为 66.7 us。无论带宽如何，符号长度都不会改变。</p>
<ol>
<li>
<p>一个时隙中有多少个符号？ A&gt; 7 个符号。</p>
</li>
<li>
<p>一个子帧中有多少个符号？ A&gt; 14 个符号。</p>
</li>
<li>
<p>一个帧中有几个时隙？ A&gt; 20 个时隙。</p>
</li>
</ol>
<hr>
<p>现在，让我们看一下由时域（横轴）和频域（竖轴）组成的单位。我们将此类型的单元称为二维单元。</p>
<p>最小的二维单位是 RE，它由时域中的<code>一个符号</code>和频域中的<code>一个子载波</code>组成。另一个二维单位是 RB（Resource Block，资源块），它由时域中的<code>一个时隙</code>和频域中的 <code>12 个子载波</code>组成。RB 是 <code>LTE</code> 中协议侧和 <code>RF</code> 测量侧最重要的单元。</p>
<ol>
<li>
<p>一个资源块中有多少个符号？ 7 个符号。</p>
</li>
<li>
<p>一个资源块中有多少个子载波？ 12 个子载波。</p>
</li>
<li>
<p>一个资源块中有多少资源元素？ 84 个资源元素。</p>
</li>
</ol>
<p>那么</p>
<ol start="4">
<li>
<p>20 Mhz 频带中有多少资源块？ 100 个资源块。</p>
</li>
<li>
<p>10 Mhz 频带中有多少资源块？ 50 个资源块。</p>
</li>
<li>
<p>5 Mhz 频带中有多少资源块？ 25 个资源块。</p>
</li>
</ol>
<h3 id="tdd类型-2">TDD——类型 2</h3>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/36_211_TDD_DL_FrameStructure.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/36_211_TDD_DL_FrameStructure.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/36_211_TDD_DL_FrameStructure.png" data-sub-html="<h2>TDD 帧结构</h2>">
        
    </a><figcaption class="image-caption">TDD 帧结构</figcaption>
    </figure>
<p>以下是使用 <a href="http://dhagle.in/LTE" target="_blank" rel="noopener noreffer">Sandesh Dhagle&rsquo;s Resource Grid Tools</a> 生成的各种配置的 <code>TDD</code> <code>UL/DL</code> 资源分配图。</p>
<table>
<thead>
<tr>
<th>类别</th>
<th>颜色</th>
</tr>
</thead>
<tbody>
<tr>
<td>PDCCH</td>
<td>橙色</td>
</tr>
<tr>
<td>PBCH</td>
<td>蓝色</td>
</tr>
<tr>
<td>PSS</td>
<td>紫色</td>
</tr>
<tr>
<td>SSS</td>
<td>浅蓝色</td>
</tr>
<tr>
<td>PDSCH</td>
<td>白色</td>
</tr>
<tr>
<td>Reserved</td>
<td>黑色</td>
</tr>
<tr>
<td>Ref Signal</td>
<td>红色</td>
</tr>
<tr>
<td>PCFICH</td>
<td>浅绿色</td>
</tr>
<tr>
<td>PHICH</td>
<td>黄色</td>
</tr>
<tr>
<td>TDD Uplink</td>
<td>绿色</td>
</tr>
<tr>
<td>Guard Period</td>
<td>灰色</td>
</tr>
</tbody>
</table>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_1_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_1_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_1_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 1, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 1, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_2_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_2_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_2_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 2, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 2, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_3_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_3_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_3_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 3, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 3, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_4_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_4_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_4_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 4, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 4, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_5_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_5_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_5_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 5, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 5, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_6_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_6_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_6_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 6, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 6, Special Subframe Config 0</figcaption>
    </figure>
<hr>
<p>下面展示具有不同特殊子帧配置的资源网格的示例。在这些示例中，仅注意子帧 0 和子帧 6 中的符号结构如何变化。</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_0_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_0_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_0_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 0</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 0</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_1_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_1_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_1_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 1</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 1</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_2_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_2_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_2_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 2</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 2</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_3_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_3_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_3_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 3</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 3</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_4_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_4_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_4_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 4</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 4</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_5_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_5_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_5_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 5</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 5</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_6_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_6_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_6_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 6</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 6</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_7_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_7_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_7_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 7</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 7</figcaption>
    </figure>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_8_01.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_8_01.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/WirelessCommunication/LTE/LTE-DL-FS/TDD_UL_DL_Configuration_0_SpecialSubframeConfig_8_01.png" data-sub-html="<h2>Configuration 0, Special Subframe Config 8</h2>">
        
    </a><figcaption class="image-caption">Configuration 0, Special Subframe Config 8</figcaption>
    </figure>
<h3 id="laa类型-3">LAA——类型 3</h3>
<p>从 3GPP Rel 13 开始，提出了一种新的帧结构，主要应用于 LAA（License Assisted Access，许可辅助访问），与 <code>LTE-U</code> 一样，这也是一种在未经许可的频率范围内传输 <code>LTE</code> 信号的技术。 然而，与 <code>LTE-U</code> 不同的是，LAA 使用一种特殊的物理层帧结构，称为帧结构类型 3，这是以前不存在的。这种新的帧结构旨在使 <code>LTE</code> 信号类似于 <code>WLAN</code> 突发，并使 <code>LTE</code> 信号更好地与现有的 <code>WLAN</code> 业务共存。更多详情参见 <a href="http://www.sharetechnote.com/html/Handbook_LTE_LAA.html" target="_blank" rel="noopener noreffer">LAA</a>。</p>
<h2 id="参考">参考</h2>
<ul>
<li>
<p>[1] <a href="http://www.sharetechnote.com/html/FrameStructure_DL.html" target="_blank" rel="noopener noreffer">Frame Structure - Downlink</a></p>
</li>
<li>
<p>[2] <a href="http://dhagle.in/LTE" target="_blank" rel="noopener noreffer">Sandesh Dhagle&rsquo;s Resource Grid Tools</a></p>
</li>
</ul>]]></description>
</item></channel>
</rss>
