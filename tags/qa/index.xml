<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Q&amp;A - 标签 - TechKoala</title>
        <link>https://www.techkoala.top/tags/qa/</link>
        <description>Q&amp;A - 标签 - TechKoala</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 19 May 2020 15:31:34 &#43;0800</lastBuildDate><atom:link href="https://www.techkoala.top/tags/qa/" rel="self" type="application/rss+xml" /><item>
    <title>PVE 安装 Q&amp;A</title>
    <link>https://www.techkoala.top/pve_q_a/</link>
    <pubDate>Tue, 19 May 2020 15:31:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/pve_q_a/</guid>
    <description><![CDATA[<blockquote>
<p>PVE 安装过程中遇到的问题以及解决方法</p>
</blockquote>
<h1 id="pve-安装-qa">PVE 安装 Q&amp;A</h1>
<p>近期将家里的服务器从 Hyper-V 迁移到 PVE 上。</p>
<p>目前安装有黑群晖、Openwrt、Ubuntu 18.09LTS</p>
<p>目前的网络拓扑图如下：</p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/PVE/%e6%8b%93%e6%89%91.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/PVE/拓扑.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/PVE/拓扑.png" data-sub-html="<h2>网络拓扑图</h2>">
        
    </a><figcaption class="image-caption">网络拓扑图</figcaption>
    </figure>
<p>将安装过程中遇到的问题以及解决方法整理如下：</p>
<h3 id="1-temporary-failure-in-name-resolution">1. Temporary failure in name resolution：</h3>
<p>由于开始使用路由器拨号，因此初次安装设置的 DNS 服务器为路由器地址，安装软路由后更改了地址，所以导致 DNS 服务器设置错误 192.168.1.190&gt;192.168.1.1</p>
<h3 id="2-群晖挂载硬盘">2. 群晖挂载硬盘：</h3>
<p>PVE 正确识别到了 NTFS 的一硬盘，但是群晖不能自动挂载。需要关机后，在 PVE 虚拟机管理界面，添加，然后重启才能识别。(否则显示为红色，同样的，移除硬件需要同样的操作)</p>
<h3 id="3-pve-节点监视图不显示时间为-1970-1-1">3. PVE 节点监视图不显示，时间为 1970-1-1：</h3>
<p>删除界面缓存文件即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Shell" data-lang="Shell">rm /var/lib/rrdcached/db/pve2-node
</code></pre></td></tr></table>
</div>
</div><h3 id="4-群晖-socks-代理">4. 群晖 socks 代理</h3>
<p>Openwrt 安装 luci-app-Privoxy，设置转发规则：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-Shell" data-lang="Shell">/ip:port .
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Hugo 搭配 LoveIt 技巧总结</title>
    <link>https://www.techkoala.top/hugo_loveit_q_a/</link>
    <pubDate>Tue, 12 May 2020 21:54:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.techkoala.top/hugo_loveit_q_a/</guid>
    <description><![CDATA[<blockquote>
<p>记录使用 Hugo 搭配 LoveIt 搭建本博客遇到的问题以及解决方案</p>
</blockquote>
<h3 id="1-虚拟机中-hugo-server-无法远程访问">1. 虚拟机中 Hugo server 无法远程访问</h3>
<p><code>hugo server</code> 默认只会 <code>bind localhost</code></p>
<p>使用：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ Hugo server --bind xxx.xxx.xxx.xxx
</code></pre></td></tr></table>
</div>
</div><p>指定虚拟机 IP，即可通过同网域机器访问该 web 服务</p>
<h3 id="2-使用-git-信息生成文章上一次修改时间">2. 使用 git 信息生成文章上一次修改时间</h3>
<p>首先，启用 <code>git</code> 信息：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">enableGitInfo = true
</code></pre></td></tr></table>
</div>
</div><p>然后，启用 gitRepo 参数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">gitRepo = &#34;/xxx/xxxx/.git/&#34;
</code></pre></td></tr></table>
</div>
</div><p>需要注意的是：</p>
<ul>
<li>
<p>这里 <code>.git</code> 应该 init 在 hugo 生成的项目根目录中</p>
</li>
<li>
<p>但是这样，如果只 push public 文件夹到 Github 上部署的话，网页上无法正确跳转对应的 commit 详情页。</p>
</li>
</ul>
<h3 id="3-页面出现-extra-stringxxxx">3. 页面出现 %!(EXTRA string=xxxx)</h3>
<p>LoveIt Github Issue 提到该问题的<a href="https://github.com/dillonzq/LoveIt/issues/197" title="%!(EXTRA string=Text) in some text" target="_blank" rel="noopener noreffer">解决方案</a></p>
<p>但实际通过修改 config.toml 中的<code>defaultContentLanguage = &quot;zh&quot;</code>为<code>defaultContentLanguage = &quot;zh-cn&quot;</code>即可解决。</p>
<h3 id="4开启-gitalk-评论">4.开启 Gitalk 评论</h3>
<p>Gitalk 使用 Github 仓库的 Issue 页面存储评论内容。</p>
<p>因此，首先我们需要在 Github 新建一个仓库（推荐）用于存储评论。</p>
<p>接着打开 <code>Settings &gt; Developer settings &gt; OAuth Apps</code> ，点击 <code>New OAuth App</code></p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Hugo/OAuth_App.png" title="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Hugo/OAuth_App.png" data-thumbnail="https://cdn.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Hugo/OAuth_App.png" data-sub-html="<h2>新建 OAuth App</h2>">
        
    </a><figcaption class="image-caption">新建 OAuth App</figcaption>
    </figure>
<p>然后填写信息：</p>
<blockquote>
<ul>
<li>Application name : 随便填写</li>
<li>Homepage URL     : 随便填写</li>
<li>Application description : 随便填写</li>
<li>Authorization callback URL : 一定要填写你的博客地址</li>
</ul>
</blockquote>
<p>完成后，点击 <code>Register application</code> 完成注册。</p>
<p>然后找到博客项目根目录中的 <code>config.toml</code> ，修改以下字段：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">[params.page.comment.gitalk]
enable = true
owner = &#34;techkoala&#34;  # 你的 Github 用户名
repo = &#34;commets_of_blog&#34; # 用于存储评论的仓库名
clientId = &#34;xxxxxx&#34;      # 请于 OAuth App 页面获取
clientSecret = &#34;xxxxxx&#34;  # 请于 OAuth App 页面获取
</code></pre></td></tr></table>
</div>
</div><p>完成上述设置后，现在就可以正常使用 Gitalk 评论系统了。评论内容可以通过 Github 对应仓库的 Issue 页面进行管理。</p>
<h3 id="cdn-配置">CDN 配置</h3>
<p><code>LoveIt</code> 的默认的 <code>CDN</code> 数据文件位于 <code>themes/LoveIt/assets/data/cdn/</code> 目录。</p>
<p>将该目录下的 <code>jsdelivr.yml</code> 移动到你的项目下相同路径： <code>assets/data/cdn/</code>。（如果需要使用别的 <code>CDN</code>，可以执行参考 <code>CDN</code> 网站的配置说明对 <code>jsdelivr.yml</code> 进行修改</p>
<p>然后修改 <code>config.toml</code> 文件中的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">  # CSS 和 JS 文件的 CDN 设置
  [params.cdn]
  # CDN 数据文件名称, 默认不启用
  # (&#34;jsdelivr.yml&#34;)
  data = &#34;jsdelivr.yml&#34;

</code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
